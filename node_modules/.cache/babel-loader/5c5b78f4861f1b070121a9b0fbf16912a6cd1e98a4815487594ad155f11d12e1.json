{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*!\n  * core-base v9.2.2\n  * (c) 2022 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { isObject, isString, isFunction, isNumber, isPlainObject, toDisplayString, isArray, format, isBoolean, assign, isRegExp, warn, escapeHtml, inBrowser, mark, measure, isEmptyObject, generateCodeFrame, generateFormatCacheKey, isDate, getGlobalThis } from '@intlify/shared';\nimport { defaultOnError, baseCompile, CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\nimport { IntlifyDevToolsHooks } from '@intlify/devtools-if';\nconst pathStateMachine = [];\npathStateMachine[0 /* BEFORE_PATH */] = {\n  [\"w\" /* WORKSPACE */]: [0 /* BEFORE_PATH */],\n  [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\n  [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */],\n  [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */]\n};\n\npathStateMachine[1 /* IN_PATH */] = {\n  [\"w\" /* WORKSPACE */]: [1 /* IN_PATH */],\n  [\".\" /* DOT */]: [2 /* BEFORE_IDENT */],\n  [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */],\n  [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */]\n};\n\npathStateMachine[2 /* BEFORE_IDENT */] = {\n  [\"w\" /* WORKSPACE */]: [2 /* BEFORE_IDENT */],\n  [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\n  [\"0\" /* ZERO */]: [3 /* IN_IDENT */, 0 /* APPEND */]\n};\n\npathStateMachine[3 /* IN_IDENT */] = {\n  [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\n  [\"0\" /* ZERO */]: [3 /* IN_IDENT */, 0 /* APPEND */],\n  [\"w\" /* WORKSPACE */]: [1 /* IN_PATH */, 1 /* PUSH */],\n  [\".\" /* DOT */]: [2 /* BEFORE_IDENT */, 1 /* PUSH */],\n  [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */, 1 /* PUSH */],\n  [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */, 1 /* PUSH */]\n};\n\npathStateMachine[4 /* IN_SUB_PATH */] = {\n  [\"'\" /* SINGLE_QUOTE */]: [5 /* IN_SINGLE_QUOTE */, 0 /* APPEND */],\n  [\"\\\"\" /* DOUBLE_QUOTE */]: [6 /* IN_DOUBLE_QUOTE */, 0 /* APPEND */],\n  [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */, 2 /* INC_SUB_PATH_DEPTH */],\n\n  [\"]\" /* RIGHT_BRACKET */]: [1 /* IN_PATH */, 3 /* PUSH_SUB_PATH */],\n  [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\n  [\"l\" /* ELSE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */]\n};\n\npathStateMachine[5 /* IN_SINGLE_QUOTE */] = {\n  [\"'\" /* SINGLE_QUOTE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */],\n  [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\n  [\"l\" /* ELSE */]: [5 /* IN_SINGLE_QUOTE */, 0 /* APPEND */]\n};\n\npathStateMachine[6 /* IN_DOUBLE_QUOTE */] = {\n  [\"\\\"\" /* DOUBLE_QUOTE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */],\n  [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\n  [\"l\" /* ELSE */]: [6 /* IN_DOUBLE_QUOTE */, 0 /* APPEND */]\n};\n/**\r\n * Check if an expression is a literal value.\r\n */\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n/**\r\n * Strip quotes from a string\r\n */\nfunction stripQuotes(str) {\n  const a = str.charCodeAt(0);\n  const b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\r\n * Determine the type of a character in a keypath.\r\n */\nfunction getPathCharType(ch) {\n  if (ch === undefined || ch === null) {\n    return \"o\" /* END_OF_FAIL */;\n  }\n\n  const code = ch.charCodeAt(0);\n  switch (code) {\n    case 0x5b: // [\n    case 0x5d: // ]\n    case 0x2e: // .\n    case 0x22: // \"\n    case 0x27:\n      // '\n      return ch;\n    case 0x5f: // _\n    case 0x24: // $\n    case 0x2d:\n      // -\n      return \"i\" /* IDENT */;\n    case 0x09: // Tab (HT)\n    case 0x0a: // Newline (LF)\n    case 0x0d: // Return (CR)\n    case 0xa0: // No-break space (NBSP)\n    case 0xfeff: // Byte Order Mark (BOM)\n    case 0x2028: // Line Separator (LS)\n    case 0x2029:\n      // Paragraph Separator (PS)\n      return \"w\" /* WORKSPACE */;\n  }\n\n  return \"i\" /* IDENT */;\n}\n/**\r\n * Format a subPath, return its plain form if it is\r\n * a literal string or number. Otherwise prepend the\r\n * dynamic indicator (*).\r\n */\nfunction formatSubPath(path) {\n  const trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : \"*\" /* ASTARISK */ + trimmed;\n}\n/**\r\n * Parse a string path into an array of segments\r\n */\nfunction parse(path) {\n  const keys = [];\n  let index = -1;\n  let mode = 0 /* BEFORE_PATH */;\n  let subPathDepth = 0;\n  let c;\n  let key; // eslint-disable-line\n  let newChar;\n  let type;\n  let transition;\n  let action;\n  let typeMap;\n  const actions = [];\n  actions[0 /* APPEND */] = () => {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n  actions[1 /* PUSH */] = () => {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n  actions[2 /* INC_SUB_PATH_DEPTH */] = () => {\n    actions[0 /* APPEND */]();\n    subPathDepth++;\n  };\n  actions[3 /* PUSH_SUB_PATH */] = () => {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = 4 /* IN_SUB_PATH */;\n      actions[0 /* APPEND */]();\n    } else {\n      subPathDepth = 0;\n      if (key === undefined) {\n        return false;\n      }\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[1 /* PUSH */]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    const nextChar = path[index + 1];\n    if (mode === 5 /* IN_SINGLE_QUOTE */ && nextChar === \"'\" /* SINGLE_QUOTE */ || mode === 6 /* IN_DOUBLE_QUOTE */ && nextChar === \"\\\"\" /* DOUBLE_QUOTE */) {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[0 /* APPEND */]();\n      return true;\n    }\n  }\n  while (mode !== null) {\n    index++;\n    c = path[index];\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap[\"l\" /* ELSE */] || 8 /* ERROR */;\n    // check parse error\n    if (transition === 8 /* ERROR */) {\n      return;\n    }\n    mode = transition[0];\n    if (transition[1] !== undefined) {\n      action = actions[transition[1]];\n      if (action) {\n        newChar = c;\n        if (action() === false) {\n          return;\n        }\n      }\n    }\n    // check parse finish\n    if (mode === 7 /* AFTER_PATH */) {\n      return keys;\n    }\n  }\n}\n// path token cache\nconst cache = new Map();\n/**\r\n * key-value message resolver\r\n *\r\n * @remarks\r\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction resolveWithKeyValue(obj, path) {\n  return isObject(obj) ? obj[path] : null;\n}\n/**\r\n * message resolver\r\n *\r\n * @remarks\r\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction resolveValue(obj, path) {\n  // check object\n  if (!isObject(obj)) {\n    return null;\n  }\n  // parse path\n  let hit = cache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      cache.set(path, hit);\n    }\n  }\n  // check hit\n  if (!hit) {\n    return null;\n  }\n  // resolve path value\n  const len = hit.length;\n  let last = obj;\n  let i = 0;\n  while (i < len) {\n    const val = last[hit[i]];\n    if (val === undefined) {\n      return null;\n    }\n    last = val;\n    i++;\n  }\n  return last;\n}\nconst DEFAULT_MODIFIER = str => str;\nconst DEFAULT_MESSAGE = ctx => ''; // eslint-disable-line\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\nconst DEFAULT_NORMALIZE = values => values.length === 0 ? '' : values.join('');\nconst DEFAULT_INTERPOLATE = toDisplayString;\nfunction pluralDefault(choice, choicesLength) {\n  choice = Math.abs(choice);\n  if (choicesLength === 2) {\n    // prettier-ignore\n    return choice ? choice > 1 ? 1 : 0 : 1;\n  }\n  return choice ? Math.min(choice, 2) : 0;\n}\nfunction getPluralIndex(options) {\n  // prettier-ignore\n  const index = isNumber(options.pluralIndex) ? options.pluralIndex : -1;\n  // prettier-ignore\n  return options.named && (isNumber(options.named.count) || isNumber(options.named.n)) ? isNumber(options.named.count) ? options.named.count : isNumber(options.named.n) ? options.named.n : index : index;\n}\nfunction normalizeNamed(pluralIndex, props) {\n  if (!props.count) {\n    props.count = pluralIndex;\n  }\n  if (!props.n) {\n    props.n = pluralIndex;\n  }\n}\nfunction createMessageContext(options = {}) {\n  const locale = options.locale;\n  const pluralIndex = getPluralIndex(options);\n  const pluralRule = isObject(options.pluralRules) && isString(locale) && isFunction(options.pluralRules[locale]) ? options.pluralRules[locale] : pluralDefault;\n  const orgPluralRule = isObject(options.pluralRules) && isString(locale) && isFunction(options.pluralRules[locale]) ? pluralDefault : undefined;\n  const plural = messages => {\n    return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n  };\n  const _list = options.list || [];\n  const list = index => _list[index];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const _named = options.named || {};\n  isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n  const named = key => _named[key];\n  function message(key) {\n    // prettier-ignore\n    const msg = isFunction(options.messages) ? options.messages(key) : isObject(options.messages) ? options.messages[key] : false;\n    return !msg ? options.parent ? options.parent.message(key) // resolve from parent messages\n    : DEFAULT_MESSAGE : msg;\n  }\n  const _modifier = name => options.modifiers ? options.modifiers[name] : DEFAULT_MODIFIER;\n  const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize) ? options.processor.normalize : DEFAULT_NORMALIZE;\n  const interpolate = isPlainObject(options.processor) && isFunction(options.processor.interpolate) ? options.processor.interpolate : DEFAULT_INTERPOLATE;\n  const type = isPlainObject(options.processor) && isString(options.processor.type) ? options.processor.type : DEFAULT_MESSAGE_DATA_TYPE;\n  const linked = (key, ...args) => {\n    const [arg1, arg2] = args;\n    let type = 'text';\n    let modifier = '';\n    if (args.length === 1) {\n      if (isObject(arg1)) {\n        modifier = arg1.modifier || modifier;\n        type = arg1.type || type;\n      } else if (isString(arg1)) {\n        modifier = arg1 || modifier;\n      }\n    } else if (args.length === 2) {\n      if (isString(arg1)) {\n        modifier = arg1 || modifier;\n      }\n      if (isString(arg2)) {\n        type = arg2 || type;\n      }\n    }\n    let msg = message(key)(ctx);\n    // The message in vnode resolved with linked are returned as an array by processor.nomalize\n    if (type === 'vnode' && isArray(msg) && modifier) {\n      msg = msg[0];\n    }\n    return modifier ? _modifier(modifier)(msg, type) : msg;\n  };\n  const ctx = {\n    [\"list\" /* LIST */]: list,\n    [\"named\" /* NAMED */]: named,\n    [\"plural\" /* PLURAL */]: plural,\n    [\"linked\" /* LINKED */]: linked,\n    [\"message\" /* MESSAGE */]: message,\n    [\"type\" /* TYPE */]: type,\n    [\"interpolate\" /* INTERPOLATE */]: interpolate,\n    [\"normalize\" /* NORMALIZE */]: normalize\n  };\n  return ctx;\n}\nlet devtools = null;\nfunction setDevToolsHook(hook) {\n  devtools = hook;\n}\nfunction getDevToolsHook() {\n  return devtools;\n}\nfunction initI18nDevTools(i18n, version, meta) {\n  // TODO: queue if devtools is undefined\n  devtools && devtools.emit(IntlifyDevToolsHooks.I18nInit, {\n    timestamp: Date.now(),\n    i18n,\n    version,\n    meta\n  });\n}\nconst translateDevTools = /* #__PURE__*/createDevToolsHook(IntlifyDevToolsHooks.FunctionTranslate);\nfunction createDevToolsHook(hook) {\n  return payloads => devtools && devtools.emit(hook, payloads);\n}\nconst CoreWarnCodes = {\n  NOT_FOUND_KEY: 1,\n  FALLBACK_TO_TRANSLATE: 2,\n  CANNOT_FORMAT_NUMBER: 3,\n  FALLBACK_TO_NUMBER_FORMAT: 4,\n  CANNOT_FORMAT_DATE: 5,\n  FALLBACK_TO_DATE_FORMAT: 6,\n  __EXTEND_POINT__: 7\n};\n/** @internal */\nconst warnMessages = {\n  [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n  [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n  [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n  [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`\n};\nfunction getWarnMessage(code, ...args) {\n  return format(warnMessages[code], ...args);\n}\n\n/**\r\n * Fallback with simple implemenation\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a simple fallback algorithm.\r\n *\r\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction fallbackWithSimple(ctx, fallback, start // eslint-disable-line @typescript-eslint/no-unused-vars\n) {\n  // prettier-ignore\n  return [...new Set([start, ...(isArray(fallback) ? fallback : isObject(fallback) ? Object.keys(fallback) : isString(fallback) ? [fallback] : [start])])];\n}\n/**\r\n * Fallback with locale chain\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n  const startLocale = isString(start) ? start : DEFAULT_LOCALE;\n  const context = ctx;\n  if (!context.__localeChainCache) {\n    context.__localeChainCache = new Map();\n  }\n  let chain = context.__localeChainCache.get(startLocale);\n  if (!chain) {\n    chain = [];\n    // first block defined by start\n    let block = [start];\n    // while any intervening block found\n    while (isArray(block)) {\n      block = appendBlockToChain(chain, block, fallback);\n    }\n    // prettier-ignore\n    // last block defined by default\n    const defaults = isArray(fallback) || !isPlainObject(fallback) ? fallback : fallback['default'] ? fallback['default'] : null;\n    // convert defaults to array\n    block = isString(defaults) ? [defaults] : defaults;\n    if (isArray(block)) {\n      appendBlockToChain(chain, block, false);\n    }\n    context.__localeChainCache.set(startLocale, chain);\n  }\n  return chain;\n}\nfunction appendBlockToChain(chain, block, blocks) {\n  let follow = true;\n  for (let i = 0; i < block.length && isBoolean(follow); i++) {\n    const locale = block[i];\n    if (isString(locale)) {\n      follow = appendLocaleToChain(chain, block[i], blocks);\n    }\n  }\n  return follow;\n}\nfunction appendLocaleToChain(chain, locale, blocks) {\n  let follow;\n  const tokens = locale.split('-');\n  do {\n    const target = tokens.join('-');\n    follow = appendItemToChain(chain, target, blocks);\n    tokens.splice(-1, 1);\n  } while (tokens.length && follow === true);\n  return follow;\n}\nfunction appendItemToChain(chain, target, blocks) {\n  let follow = false;\n  if (!chain.includes(target)) {\n    follow = true;\n    if (target) {\n      follow = target[target.length - 1] !== '!';\n      const locale = target.replace(/!/g, '');\n      chain.push(locale);\n      if ((isArray(blocks) || isPlainObject(blocks)) && blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        follow = blocks[locale];\n      }\n    }\n  }\n  return follow;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\r\n * Intlify core-base version\r\n * @internal\r\n */\nconst VERSION = '9.2.2';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\nconst capitalize = str => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\nfunction getDefaultLinkedModifiers() {\n  return {\n    upper: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && isString(val) ? val.toUpperCase() : type === 'vnode' && isObject(val) && '__v_isVNode' in val ? val.children.toUpperCase() : val;\n    },\n    lower: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && isString(val) ? val.toLowerCase() : type === 'vnode' && isObject(val) && '__v_isVNode' in val ? val.children.toLowerCase() : val;\n    },\n    capitalize: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && isString(val) ? capitalize(val) : type === 'vnode' && isObject(val) && '__v_isVNode' in val ? capitalize(val.children) : val;\n    }\n  };\n}\nlet _compiler;\nfunction registerMessageCompiler(compiler) {\n  _compiler = compiler;\n}\nlet _resolver;\n/**\r\n * Register the message resolver\r\n *\r\n * @param resolver - A {@link MessageResolver} function\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction registerMessageResolver(resolver) {\n  _resolver = resolver;\n}\nlet _fallbacker;\n/**\r\n * Register the locale fallbacker\r\n *\r\n * @param fallbacker - A {@link LocaleFallbacker} function\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction registerLocaleFallbacker(fallbacker) {\n  _fallbacker = fallbacker;\n}\n// Additional Meta for Intlify DevTools\nlet _additionalMeta = null;\nconst setAdditionalMeta = meta => {\n  _additionalMeta = meta;\n};\nconst getAdditionalMeta = () => _additionalMeta;\nlet _fallbackContext = null;\nconst setFallbackContext = context => {\n  _fallbackContext = context;\n};\nconst getFallbackContext = () => _fallbackContext;\n// ID for CoreContext\nlet _cid = 0;\nfunction createCoreContext(options = {}) {\n  // setup options\n  const version = isString(options.version) ? options.version : VERSION;\n  const locale = isString(options.locale) ? options.locale : DEFAULT_LOCALE;\n  const fallbackLocale = isArray(options.fallbackLocale) || isPlainObject(options.fallbackLocale) || isString(options.fallbackLocale) || options.fallbackLocale === false ? options.fallbackLocale : locale;\n  const messages = isPlainObject(options.messages) ? options.messages : {\n    [locale]: {}\n  };\n  const datetimeFormats = isPlainObject(options.datetimeFormats) ? options.datetimeFormats : {\n    [locale]: {}\n  };\n  const numberFormats = isPlainObject(options.numberFormats) ? options.numberFormats : {\n    [locale]: {}\n  };\n  const modifiers = assign({}, options.modifiers || {}, getDefaultLinkedModifiers());\n  const pluralRules = options.pluralRules || {};\n  const missing = isFunction(options.missing) ? options.missing : null;\n  const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn) ? options.missingWarn : true;\n  const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn) ? options.fallbackWarn : true;\n  const fallbackFormat = !!options.fallbackFormat;\n  const unresolving = !!options.unresolving;\n  const postTranslation = isFunction(options.postTranslation) ? options.postTranslation : null;\n  const processor = isPlainObject(options.processor) ? options.processor : null;\n  const warnHtmlMessage = isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;\n  const escapeParameter = !!options.escapeParameter;\n  const messageCompiler = isFunction(options.messageCompiler) ? options.messageCompiler : _compiler;\n  const messageResolver = isFunction(options.messageResolver) ? options.messageResolver : _resolver || resolveWithKeyValue;\n  const localeFallbacker = isFunction(options.localeFallbacker) ? options.localeFallbacker : _fallbacker || fallbackWithSimple;\n  const fallbackContext = isObject(options.fallbackContext) ? options.fallbackContext : undefined;\n  const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\n  // setup internal options\n  const internalOptions = options;\n  const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters) ? internalOptions.__datetimeFormatters : new Map();\n  const __numberFormatters = isObject(internalOptions.__numberFormatters) ? internalOptions.__numberFormatters : new Map();\n  const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n  _cid++;\n  const context = {\n    version,\n    cid: _cid,\n    locale,\n    fallbackLocale,\n    messages,\n    modifiers,\n    pluralRules,\n    missing,\n    missingWarn,\n    fallbackWarn,\n    fallbackFormat,\n    unresolving,\n    postTranslation,\n    processor,\n    warnHtmlMessage,\n    escapeParameter,\n    messageCompiler,\n    messageResolver,\n    localeFallbacker,\n    fallbackContext,\n    onWarn,\n    __meta\n  };\n  {\n    context.datetimeFormats = datetimeFormats;\n    context.numberFormats = numberFormats;\n    context.__datetimeFormatters = __datetimeFormatters;\n    context.__numberFormatters = __numberFormatters;\n  }\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production') {\n    context.__v_emitter = internalOptions.__v_emitter != null ? internalOptions.__v_emitter : undefined;\n  }\n  // NOTE: experimental !!\n  if (process.env.NODE_ENV !== 'production' || __INTLIFY_PROD_DEVTOOLS__) {\n    initI18nDevTools(context, version, __meta);\n  }\n  return context;\n}\n/** @internal */\nfunction isTranslateFallbackWarn(fallback, key) {\n  return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\nfunction isTranslateMissingWarn(missing, key) {\n  return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\nfunction handleMissing(context, key, locale, missingWarn, type) {\n  const {\n    missing,\n    onWarn\n  } = context;\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production') {\n    const emitter = context.__v_emitter;\n    if (emitter) {\n      emitter.emit(\"missing\" /* MISSING */, {\n        locale,\n        key,\n        type,\n        groupId: `${type}:${key}`\n      });\n    }\n  }\n  if (missing !== null) {\n    const ret = missing(context, locale, key, type);\n    return isString(ret) ? ret : key;\n  } else {\n    if (process.env.NODE_ENV !== 'production' && isTranslateMissingWarn(missingWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, {\n        key,\n        locale\n      }));\n    }\n    return key;\n  }\n}\n/** @internal */\nfunction updateFallbackLocale(ctx, locale, fallback) {\n  const context = ctx;\n  context.__localeChainCache = new Map();\n  ctx.localeFallbacker(ctx, fallback, locale);\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst RE_HTML_TAG = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\nfunction checkHtmlMessage(source, options) {\n  const warnHtmlMessage = isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;\n  if (warnHtmlMessage && RE_HTML_TAG.test(source)) {\n    warn(format(WARN_MESSAGE, {\n      source\n    }));\n  }\n}\nconst defaultOnCacheKey = source => source;\nlet compileCache = Object.create(null);\nfunction clearCompileCache() {\n  compileCache = Object.create(null);\n}\nfunction compileToFunction(source, options = {}) {\n  {\n    // check HTML message\n    process.env.NODE_ENV !== 'production' && checkHtmlMessage(source, options);\n    // check caches\n    const onCacheKey = options.onCacheKey || defaultOnCacheKey;\n    const key = onCacheKey(source);\n    const cached = compileCache[key];\n    if (cached) {\n      return cached;\n    }\n    // compile error detecting\n    let occurred = false;\n    const onError = options.onError || defaultOnError;\n    options.onError = err => {\n      occurred = true;\n      onError(err);\n    };\n    // compile\n    const {\n      code\n    } = baseCompile(source, options);\n    // evaluate function\n    const msg = new Function(`return ${code}`)();\n    // if occurred compile error, don't cache\n    return !occurred ? compileCache[key] = msg : msg;\n  }\n}\nlet code = CompileErrorCodes.__EXTEND_POINT__;\nconst inc = () => ++code;\nconst CoreErrorCodes = {\n  INVALID_ARGUMENT: code,\n  INVALID_DATE_ARGUMENT: inc(),\n  INVALID_ISO_DATE_ARGUMENT: inc(),\n  __EXTEND_POINT__: inc() // 18\n};\n\nfunction createCoreError(code) {\n  return createCompileError(code, null, process.env.NODE_ENV !== 'production' ? {\n    messages: errorMessages\n  } : undefined);\n}\n/** @internal */\nconst errorMessages = {\n  [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n  [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' + 'Make sure your Date represents a valid date.',\n  [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string'\n};\nconst NOOP_MESSAGE_FUNCTION = () => '';\nconst isMessageFunction = val => isFunction(val);\n// implementation of `translate` function\nfunction translate(context, ...args) {\n  const {\n    fallbackFormat,\n    postTranslation,\n    unresolving,\n    messageCompiler,\n    fallbackLocale,\n    messages\n  } = context;\n  const [key, options] = parseTranslateArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const escapeParameter = isBoolean(options.escapeParameter) ? options.escapeParameter : context.escapeParameter;\n  const resolvedMessage = !!options.resolvedMessage;\n  // prettier-ignore\n  const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n  ? !isBoolean(options.default) ? options.default : !messageCompiler ? () => key : key : fallbackFormat // default by `fallbackFormat` option\n  ? !messageCompiler ? () => key : key : '';\n  const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\n  const locale = isString(options.locale) ? options.locale : context.locale;\n  // escape params\n  escapeParameter && escapeParams(options);\n  // resolve message format\n  // eslint-disable-next-line prefer-const\n  let [formatScope, targetLocale, message] = !resolvedMessage ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) : [key, locale, messages[locale] || {}];\n  // NOTE:\n  //  Fix to work around `ssrTransfrom` bug in Vite.\n  //  https://github.com/vitejs/vite/issues/4306\n  //  To get around this, use temporary variables.\n  //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n  let format = formatScope;\n  // if you use default message, set it as message format!\n  let cacheBaseKey = key;\n  if (!resolvedMessage && !(isString(format) || isMessageFunction(format))) {\n    if (enableDefaultMsg) {\n      format = defaultMsgOrKey;\n      cacheBaseKey = format;\n    }\n  }\n  // checking message format and target locale\n  if (!resolvedMessage && (!(isString(format) || isMessageFunction(format)) || !isString(targetLocale))) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  if (process.env.NODE_ENV !== 'production' && isString(format) && context.messageCompiler == null) {\n    warn(`The message format compilation is not supported in this build. ` + `Because message compiler isn't included. ` + `You need to pre-compilation all message format. ` + `So translate function return '${key}'.`);\n    return key;\n  }\n  // setup compile error detecting\n  let occurred = false;\n  const errorDetector = () => {\n    occurred = true;\n  };\n  // compile message format\n  const msg = !isMessageFunction(format) ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector) : format;\n  // if occurred compile error, return the message format\n  if (occurred) {\n    return format;\n  }\n  // evaluate message with context\n  const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n  const msgContext = createMessageContext(ctxOptions);\n  const messaged = evaluateMessage(context, msg, msgContext);\n  // if use post translation option, proceed it with handler\n  const ret = postTranslation ? postTranslation(messaged, key) : messaged;\n  // NOTE: experimental !!\n  if (process.env.NODE_ENV !== 'production' || __INTLIFY_PROD_DEVTOOLS__) {\n    // prettier-ignore\n    const payloads = {\n      timestamp: Date.now(),\n      key: isString(key) ? key : isMessageFunction(format) ? format.key : '',\n      locale: targetLocale || (isMessageFunction(format) ? format.locale : ''),\n      format: isString(format) ? format : isMessageFunction(format) ? format.source : '',\n      message: ret\n    };\n    payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n    translateDevTools(payloads);\n  }\n  return ret;\n}\nfunction escapeParams(options) {\n  if (isArray(options.list)) {\n    options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n  } else if (isObject(options.named)) {\n    Object.keys(options.named).forEach(key => {\n      if (isString(options.named[key])) {\n        options.named[key] = escapeHtml(options.named[key]);\n      }\n    });\n  }\n}\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n  const {\n    messages,\n    onWarn,\n    messageResolver: resolveValue,\n    localeFallbacker\n  } = context;\n  const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n  let message = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'translate';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\n        key,\n        target: targetLocale\n      }));\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n      if (emitter) {\n        emitter.emit(\"fallback\" /* FALBACK */, {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n    message = messages[targetLocale] || {};\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if (process.env.NODE_ENV !== 'production' && inBrowser) {\n      start = window.performance.now();\n      startTag = 'intlify-message-resolve-start';\n      endTag = 'intlify-message-resolve-end';\n      mark && mark(startTag);\n    }\n    if ((format = resolveValue(message, key)) === null) {\n      // if null, resolve with object key path\n      format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && inBrowser) {\n      const end = window.performance.now();\n      const emitter = context.__v_emitter;\n      if (emitter && start && format) {\n        emitter.emit(\"message-resolve\" /* MESSAGE_RESOLVE */, {\n          type: \"message-resolve\" /* MESSAGE_RESOLVE */,\n          key,\n          message: format,\n          time: end - start,\n          groupId: `${type}:${key}`\n        });\n      }\n      if (startTag && endTag && mark && measure) {\n        mark(endTag);\n        measure('intlify message resolve', startTag, endTag);\n      }\n    }\n    if (isString(format) || isFunction(format)) break;\n    const missingRet = handleMissing(context,\n    // eslint-disable-line @typescript-eslint/no-explicit-any\n    key, targetLocale, missingWarn, type);\n    if (missingRet !== key) {\n      format = missingRet;\n    }\n    from = to;\n  }\n  return [format, targetLocale, message];\n}\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector) {\n  const {\n    messageCompiler,\n    warnHtmlMessage\n  } = context;\n  if (isMessageFunction(format)) {\n    const msg = format;\n    msg.locale = msg.locale || targetLocale;\n    msg.key = msg.key || key;\n    return msg;\n  }\n  if (messageCompiler == null) {\n    const msg = () => format;\n    msg.locale = targetLocale;\n    msg.key = key;\n    return msg;\n  }\n  // for vue-devtools timeline event\n  let start = null;\n  let startTag;\n  let endTag;\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    start = window.performance.now();\n    startTag = 'intlify-message-compilation-start';\n    endTag = 'intlify-message-compilation-end';\n    mark && mark(startTag);\n  }\n  const msg = messageCompiler(format, getCompileOptions(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, errorDetector));\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    const end = window.performance.now();\n    const emitter = context.__v_emitter;\n    if (emitter && start) {\n      emitter.emit(\"message-compilation\" /* MESSAGE_COMPILATION */, {\n        type: \"message-compilation\" /* MESSAGE_COMPILATION */,\n        message: format,\n        time: end - start,\n        groupId: `${'translate'}:${key}`\n      });\n    }\n    if (startTag && endTag && mark && measure) {\n      mark(endTag);\n      measure('intlify message compilation', startTag, endTag);\n    }\n  }\n  msg.locale = targetLocale;\n  msg.key = key;\n  msg.source = format;\n  return msg;\n}\nfunction evaluateMessage(context, msg, msgCtx) {\n  // for vue-devtools timeline event\n  let start = null;\n  let startTag;\n  let endTag;\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    start = window.performance.now();\n    startTag = 'intlify-message-evaluation-start';\n    endTag = 'intlify-message-evaluation-end';\n    mark && mark(startTag);\n  }\n  const messaged = msg(msgCtx);\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    const end = window.performance.now();\n    const emitter = context.__v_emitter;\n    if (emitter && start) {\n      emitter.emit(\"message-evaluation\" /* MESSAGE_EVALUATION */, {\n        type: \"message-evaluation\" /* MESSAGE_EVALUATION */,\n        value: messaged,\n        time: end - start,\n        groupId: `${'translate'}:${msg.key}`\n      });\n    }\n    if (startTag && endTag && mark && measure) {\n      mark(endTag);\n      measure('intlify message evaluation', startTag, endTag);\n    }\n  }\n  return messaged;\n}\n/** @internal */\nfunction parseTranslateArgs(...args) {\n  const [arg1, arg2, arg3] = args;\n  const options = {};\n  if (!isString(arg1) && !isNumber(arg1) && !isMessageFunction(arg1)) {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  // prettier-ignore\n  const key = isNumber(arg1) ? String(arg1) : isMessageFunction(arg1) ? arg1 : arg1;\n  if (isNumber(arg2)) {\n    options.plural = arg2;\n  } else if (isString(arg2)) {\n    options.default = arg2;\n  } else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n    options.named = arg2;\n  } else if (isArray(arg2)) {\n    options.list = arg2;\n  }\n  if (isNumber(arg3)) {\n    options.plural = arg3;\n  } else if (isString(arg3)) {\n    options.default = arg3;\n  } else if (isPlainObject(arg3)) {\n    assign(options, arg3);\n  }\n  return [key, options];\n}\nfunction getCompileOptions(context, locale, key, source, warnHtmlMessage, errorDetector) {\n  return {\n    warnHtmlMessage,\n    onError: err => {\n      errorDetector && errorDetector(err);\n      if (process.env.NODE_ENV !== 'production') {\n        const message = `Message compilation error: ${err.message}`;\n        const codeFrame = err.location && generateCodeFrame(source, err.location.start.offset, err.location.end.offset);\n        const emitter = context.__v_emitter;\n        if (emitter) {\n          emitter.emit(\"compile-error\" /* COMPILE_ERROR */, {\n            message: source,\n            error: err.message,\n            start: err.location && err.location.start.offset,\n            end: err.location && err.location.end.offset,\n            groupId: `${'translate'}:${key}`\n          });\n        }\n        console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n      } else {\n        throw err;\n      }\n    },\n    onCacheKey: source => generateFormatCacheKey(locale, key, source)\n  };\n}\nfunction getMessageContextOptions(context, locale, message, options) {\n  const {\n    modifiers,\n    pluralRules,\n    messageResolver: resolveValue,\n    fallbackLocale,\n    fallbackWarn,\n    missingWarn,\n    fallbackContext\n  } = context;\n  const resolveMessage = key => {\n    let val = resolveValue(message, key);\n    // fallback to root context\n    if (val == null && fallbackContext) {\n      const [,, message] = resolveMessageFormat(fallbackContext, key, locale, fallbackLocale, fallbackWarn, missingWarn);\n      val = resolveValue(message, key);\n    }\n    if (isString(val)) {\n      let occurred = false;\n      const errorDetector = () => {\n        occurred = true;\n      };\n      const msg = compileMessageFormat(context, key, locale, val, key, errorDetector);\n      return !occurred ? msg : NOOP_MESSAGE_FUNCTION;\n    } else if (isMessageFunction(val)) {\n      return val;\n    } else {\n      // TODO: should be implemented warning message\n      return NOOP_MESSAGE_FUNCTION;\n    }\n  };\n  const ctxOptions = {\n    locale,\n    modifiers,\n    pluralRules,\n    messages: resolveMessage\n  };\n  if (context.processor) {\n    ctxOptions.processor = context.processor;\n  }\n  if (options.list) {\n    ctxOptions.list = options.list;\n  }\n  if (options.named) {\n    ctxOptions.named = options.named;\n  }\n  if (isNumber(options.plural)) {\n    ctxOptions.pluralIndex = options.plural;\n  }\n  return ctxOptions;\n}\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n  dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n  numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n};\n\n// implementation of `datetime` function\nfunction datetime(context, ...args) {\n  const {\n    datetimeFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn,\n    localeFallbacker\n  } = context;\n  const {\n    __datetimeFormatters\n  } = context;\n  if (process.env.NODE_ENV !== 'production' && !Availabilities.dateTimeFormat) {\n    onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\n    return MISSING_RESOLVE_VALUE;\n  }\n  const [key, value, options, overrides] = parseDateTimeArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = isString(options.locale) ? options.locale : context.locale;\n  const locales = localeFallbacker(context,\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  fallbackLocale, locale);\n  if (!isString(key) || key === '') {\n    return new Intl.DateTimeFormat(locale, overrides).format(value);\n  }\n  // resolve format\n  let datetimeFormat = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'datetime format';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\n        key,\n        target: targetLocale\n      }));\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n      if (emitter) {\n        emitter.emit(\"fallback\" /* FALBACK */, {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n    datetimeFormat = datetimeFormats[targetLocale] || {};\n    format = datetimeFormat[key];\n    if (isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n    from = to;\n  }\n  // checking format and target locale\n  if (!isPlainObject(format) || !isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  let id = `${targetLocale}__${key}`;\n  if (!isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n  let formatter = __datetimeFormatters.get(id);\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n    __datetimeFormatters.set(id, formatter);\n  }\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst DATETIME_FORMAT_OPTIONS_KEYS = ['localeMatcher', 'weekday', 'era', 'year', 'month', 'day', 'hour', 'minute', 'second', 'timeZoneName', 'formatMatcher', 'hour12', 'timeZone', 'dateStyle', 'timeStyle', 'calendar', 'dayPeriod', 'numberingSystem', 'hourCycle', 'fractionalSecondDigits'];\n/** @internal */\nfunction parseDateTimeArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  const options = {};\n  let overrides = {};\n  let value;\n  if (isString(arg1)) {\n    // Only allow ISO strings - other date formats are often supported,\n    // but may cause different results in different browsers.\n    const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n    if (!matches) {\n      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n    }\n    // Some browsers can not parse the iso datetime separated by space,\n    // this is a compromise solution by replace the 'T'/' ' with 'T'\n    const dateTime = matches[3] ? matches[3].trim().startsWith('T') ? `${matches[1].trim()}${matches[3].trim()}` : `${matches[1].trim()}T${matches[3].trim()}` : matches[1].trim();\n    value = new Date(dateTime);\n    try {\n      // This will fail if the date is not valid\n      value.toISOString();\n    } catch (e) {\n      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n    }\n  } else if (isDate(arg1)) {\n    if (isNaN(arg1.getTime())) {\n      throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n    }\n    value = arg1;\n  } else if (isNumber(arg1)) {\n    value = arg1;\n  } else {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  if (isString(arg2)) {\n    options.key = arg2;\n  } else if (isPlainObject(arg2)) {\n    Object.keys(arg2).forEach(key => {\n      if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\n        overrides[key] = arg2[key];\n      } else {\n        options[key] = arg2[key];\n      }\n    });\n  }\n  if (isString(arg3)) {\n    options.locale = arg3;\n  } else if (isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n  if (isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearDateTimeFormat(ctx, locale, format) {\n  const context = ctx;\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n    if (!context.__datetimeFormatters.has(id)) {\n      continue;\n    }\n    context.__datetimeFormatters.delete(id);\n  }\n}\n\n// implementation of `number` function\nfunction number(context, ...args) {\n  const {\n    numberFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn,\n    localeFallbacker\n  } = context;\n  const {\n    __numberFormatters\n  } = context;\n  if (process.env.NODE_ENV !== 'production' && !Availabilities.numberFormat) {\n    onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\n    return MISSING_RESOLVE_VALUE;\n  }\n  const [key, value, options, overrides] = parseNumberArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = isString(options.locale) ? options.locale : context.locale;\n  const locales = localeFallbacker(context,\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  fallbackLocale, locale);\n  if (!isString(key) || key === '') {\n    return new Intl.NumberFormat(locale, overrides).format(value);\n  }\n  // resolve format\n  let numberFormat = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'number format';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\n        key,\n        target: targetLocale\n      }));\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n      if (emitter) {\n        emitter.emit(\"fallback\" /* FALBACK */, {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n    numberFormat = numberFormats[targetLocale] || {};\n    format = numberFormat[key];\n    if (isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n    from = to;\n  }\n  // checking format and target locale\n  if (!isPlainObject(format) || !isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  let id = `${targetLocale}__${key}`;\n  if (!isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n  let formatter = __numberFormatters.get(id);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n    __numberFormatters.set(id, formatter);\n  }\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst NUMBER_FORMAT_OPTIONS_KEYS = ['localeMatcher', 'style', 'currency', 'currencyDisplay', 'currencySign', 'useGrouping', 'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits', 'minimumSignificantDigits', 'maximumSignificantDigits', 'compactDisplay', 'notation', 'signDisplay', 'unit', 'unitDisplay', 'roundingMode', 'roundingPriority', 'roundingIncrement', 'trailingZeroDisplay'];\n/** @internal */\nfunction parseNumberArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  const options = {};\n  let overrides = {};\n  if (!isNumber(arg1)) {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  const value = arg1;\n  if (isString(arg2)) {\n    options.key = arg2;\n  } else if (isPlainObject(arg2)) {\n    Object.keys(arg2).forEach(key => {\n      if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\n        overrides[key] = arg2[key];\n      } else {\n        options[key] = arg2[key];\n      }\n    });\n  }\n  if (isString(arg3)) {\n    options.locale = arg3;\n  } else if (isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n  if (isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearNumberFormat(ctx, locale, format) {\n  const context = ctx;\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n    if (!context.__numberFormatters.has(id)) {\n      continue;\n    }\n    context.__numberFormatters.delete(id);\n  }\n}\n\n// TODO: we could not exports for Node native ES Moudles yet...\n{\n  if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n    getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n  }\n}\nexport { CoreErrorCodes, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compileToFunction, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getWarnMessage, handleMissing, initI18nDevTools, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };","map":{"version":3,"names":["isObject","isString","isFunction","isNumber","isPlainObject","toDisplayString","isArray","format","isBoolean","assign","isRegExp","warn","escapeHtml","inBrowser","mark","measure","isEmptyObject","generateCodeFrame","generateFormatCacheKey","isDate","getGlobalThis","defaultOnError","baseCompile","CompileErrorCodes","createCompileError","IntlifyDevToolsHooks","pathStateMachine","literalValueRE","isLiteral","exp","test","stripQuotes","str","a","charCodeAt","b","length","slice","getPathCharType","ch","undefined","code","formatSubPath","path","trimmed","trim","charAt","isNaN","parseInt","parse","keys","index","mode","subPathDepth","c","key","newChar","type","transition","action","typeMap","actions","push","maybeUnescapeQuote","nextChar","cache","Map","resolveWithKeyValue","obj","resolveValue","hit","get","set","len","last","i","val","DEFAULT_MODIFIER","DEFAULT_MESSAGE","ctx","DEFAULT_MESSAGE_DATA_TYPE","DEFAULT_NORMALIZE","values","join","DEFAULT_INTERPOLATE","pluralDefault","choice","choicesLength","Math","abs","min","getPluralIndex","options","pluralIndex","named","count","n","normalizeNamed","props","createMessageContext","locale","pluralRule","pluralRules","orgPluralRule","plural","messages","_list","list","_named","message","msg","parent","_modifier","name","modifiers","normalize","processor","interpolate","linked","args","arg1","arg2","modifier","devtools","setDevToolsHook","hook","getDevToolsHook","initI18nDevTools","i18n","version","meta","emit","I18nInit","timestamp","Date","now","translateDevTools","createDevToolsHook","FunctionTranslate","payloads","CoreWarnCodes","NOT_FOUND_KEY","FALLBACK_TO_TRANSLATE","CANNOT_FORMAT_NUMBER","FALLBACK_TO_NUMBER_FORMAT","CANNOT_FORMAT_DATE","FALLBACK_TO_DATE_FORMAT","__EXTEND_POINT__","warnMessages","getWarnMessage","fallbackWithSimple","fallback","start","Set","Object","fallbackWithLocaleChain","startLocale","DEFAULT_LOCALE","context","__localeChainCache","chain","block","appendBlockToChain","defaults","blocks","follow","appendLocaleToChain","tokens","split","target","appendItemToChain","splice","includes","replace","VERSION","NOT_REOSLVED","MISSING_RESOLVE_VALUE","capitalize","toLocaleUpperCase","substr","getDefaultLinkedModifiers","upper","toUpperCase","children","lower","toLowerCase","_compiler","registerMessageCompiler","compiler","_resolver","registerMessageResolver","resolver","_fallbacker","registerLocaleFallbacker","fallbacker","_additionalMeta","setAdditionalMeta","getAdditionalMeta","_fallbackContext","setFallbackContext","getFallbackContext","_cid","createCoreContext","fallbackLocale","datetimeFormats","numberFormats","missing","missingWarn","fallbackWarn","fallbackFormat","unresolving","postTranslation","warnHtmlMessage","escapeParameter","messageCompiler","messageResolver","localeFallbacker","fallbackContext","onWarn","internalOptions","__datetimeFormatters","__numberFormatters","__meta","cid","process","env","NODE_ENV","__v_emitter","__INTLIFY_PROD_DEVTOOLS__","isTranslateFallbackWarn","RegExp","isTranslateMissingWarn","handleMissing","emitter","groupId","ret","updateFallbackLocale","RE_HTML_TAG","WARN_MESSAGE","checkHtmlMessage","source","defaultOnCacheKey","compileCache","create","clearCompileCache","compileToFunction","onCacheKey","cached","occurred","onError","err","Function","inc","CoreErrorCodes","INVALID_ARGUMENT","INVALID_DATE_ARGUMENT","INVALID_ISO_DATE_ARGUMENT","createCoreError","errorMessages","NOOP_MESSAGE_FUNCTION","isMessageFunction","translate","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","default","enableDefaultMsg","escapeParams","formatScope","targetLocale","resolveMessageFormat","cacheBaseKey","errorDetector","compileMessageFormat","ctxOptions","getMessageContextOptions","msgContext","messaged","evaluateMessage","map","item","forEach","locales","from","to","startTag","endTag","window","performance","end","time","missingRet","getCompileOptions","msgCtx","value","arg3","String","codeFrame","location","offset","error","console","resolveMessage","intlDefined","Intl","Availabilities","dateTimeFormat","DateTimeFormat","numberFormat","NumberFormat","datetime","overrides","parseDateTimeArgs","part","datetimeFormat","id","JSON","stringify","formatter","formatToParts","DATETIME_FORMAT_OPTIONS_KEYS","arg4","matches","match","dateTime","startsWith","toISOString","e","getTime","clearDateTimeFormat","has","delete","number","parseNumberArgs","NUMBER_FORMAT_OPTIONS_KEYS","clearNumberFormat"],"sources":["/Users/emperinter/app/HTML/watermark-vue/node_modules/@intlify/core-base/dist/core-base.esm-bundler.js"],"sourcesContent":["/*!\n  * core-base v9.2.2\n  * (c) 2022 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { isObject, isString, isFunction, isNumber, isPlainObject, toDisplayString, isArray, format, isBoolean, assign, isRegExp, warn, escapeHtml, inBrowser, mark, measure, isEmptyObject, generateCodeFrame, generateFormatCacheKey, isDate, getGlobalThis } from '@intlify/shared';\nimport { defaultOnError, baseCompile, CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\nimport { IntlifyDevToolsHooks } from '@intlify/devtools-if';\n\nconst pathStateMachine =  [];\r\npathStateMachine[0 /* BEFORE_PATH */] = {\r\n    [\"w\" /* WORKSPACE */]: [0 /* BEFORE_PATH */],\r\n    [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\r\n    [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */],\r\n    [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */]\r\n};\r\npathStateMachine[1 /* IN_PATH */] = {\r\n    [\"w\" /* WORKSPACE */]: [1 /* IN_PATH */],\r\n    [\".\" /* DOT */]: [2 /* BEFORE_IDENT */],\r\n    [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */],\r\n    [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */]\r\n};\r\npathStateMachine[2 /* BEFORE_IDENT */] = {\r\n    [\"w\" /* WORKSPACE */]: [2 /* BEFORE_IDENT */],\r\n    [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\r\n    [\"0\" /* ZERO */]: [3 /* IN_IDENT */, 0 /* APPEND */]\r\n};\r\npathStateMachine[3 /* IN_IDENT */] = {\r\n    [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\r\n    [\"0\" /* ZERO */]: [3 /* IN_IDENT */, 0 /* APPEND */],\r\n    [\"w\" /* WORKSPACE */]: [1 /* IN_PATH */, 1 /* PUSH */],\r\n    [\".\" /* DOT */]: [2 /* BEFORE_IDENT */, 1 /* PUSH */],\r\n    [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */, 1 /* PUSH */],\r\n    [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */, 1 /* PUSH */]\r\n};\r\npathStateMachine[4 /* IN_SUB_PATH */] = {\r\n    [\"'\" /* SINGLE_QUOTE */]: [5 /* IN_SINGLE_QUOTE */, 0 /* APPEND */],\r\n    [\"\\\"\" /* DOUBLE_QUOTE */]: [6 /* IN_DOUBLE_QUOTE */, 0 /* APPEND */],\r\n    [\"[\" /* LEFT_BRACKET */]: [\r\n        4 /* IN_SUB_PATH */,\r\n        2 /* INC_SUB_PATH_DEPTH */\r\n    ],\r\n    [\"]\" /* RIGHT_BRACKET */]: [1 /* IN_PATH */, 3 /* PUSH_SUB_PATH */],\r\n    [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\r\n    [\"l\" /* ELSE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */]\r\n};\r\npathStateMachine[5 /* IN_SINGLE_QUOTE */] = {\r\n    [\"'\" /* SINGLE_QUOTE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */],\r\n    [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\r\n    [\"l\" /* ELSE */]: [5 /* IN_SINGLE_QUOTE */, 0 /* APPEND */]\r\n};\r\npathStateMachine[6 /* IN_DOUBLE_QUOTE */] = {\r\n    [\"\\\"\" /* DOUBLE_QUOTE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */],\r\n    [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\r\n    [\"l\" /* ELSE */]: [6 /* IN_DOUBLE_QUOTE */, 0 /* APPEND */]\r\n};\r\n/**\r\n * Check if an expression is a literal value.\r\n */\r\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\r\nfunction isLiteral(exp) {\r\n    return literalValueRE.test(exp);\r\n}\r\n/**\r\n * Strip quotes from a string\r\n */\r\nfunction stripQuotes(str) {\r\n    const a = str.charCodeAt(0);\r\n    const b = str.charCodeAt(str.length - 1);\r\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\r\n}\r\n/**\r\n * Determine the type of a character in a keypath.\r\n */\r\nfunction getPathCharType(ch) {\r\n    if (ch === undefined || ch === null) {\r\n        return \"o\" /* END_OF_FAIL */;\r\n    }\r\n    const code = ch.charCodeAt(0);\r\n    switch (code) {\r\n        case 0x5b: // [\r\n        case 0x5d: // ]\r\n        case 0x2e: // .\r\n        case 0x22: // \"\r\n        case 0x27: // '\r\n            return ch;\r\n        case 0x5f: // _\r\n        case 0x24: // $\r\n        case 0x2d: // -\r\n            return \"i\" /* IDENT */;\r\n        case 0x09: // Tab (HT)\r\n        case 0x0a: // Newline (LF)\r\n        case 0x0d: // Return (CR)\r\n        case 0xa0: // No-break space (NBSP)\r\n        case 0xfeff: // Byte Order Mark (BOM)\r\n        case 0x2028: // Line Separator (LS)\r\n        case 0x2029: // Paragraph Separator (PS)\r\n            return \"w\" /* WORKSPACE */;\r\n    }\r\n    return \"i\" /* IDENT */;\r\n}\r\n/**\r\n * Format a subPath, return its plain form if it is\r\n * a literal string or number. Otherwise prepend the\r\n * dynamic indicator (*).\r\n */\r\nfunction formatSubPath(path) {\r\n    const trimmed = path.trim();\r\n    // invalid leading 0\r\n    if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\r\n        return false;\r\n    }\r\n    return isLiteral(trimmed)\r\n        ? stripQuotes(trimmed)\r\n        : \"*\" /* ASTARISK */ + trimmed;\r\n}\r\n/**\r\n * Parse a string path into an array of segments\r\n */\r\nfunction parse(path) {\r\n    const keys = [];\r\n    let index = -1;\r\n    let mode = 0 /* BEFORE_PATH */;\r\n    let subPathDepth = 0;\r\n    let c;\r\n    let key; // eslint-disable-line\r\n    let newChar;\r\n    let type;\r\n    let transition;\r\n    let action;\r\n    let typeMap;\r\n    const actions = [];\r\n    actions[0 /* APPEND */] = () => {\r\n        if (key === undefined) {\r\n            key = newChar;\r\n        }\r\n        else {\r\n            key += newChar;\r\n        }\r\n    };\r\n    actions[1 /* PUSH */] = () => {\r\n        if (key !== undefined) {\r\n            keys.push(key);\r\n            key = undefined;\r\n        }\r\n    };\r\n    actions[2 /* INC_SUB_PATH_DEPTH */] = () => {\r\n        actions[0 /* APPEND */]();\r\n        subPathDepth++;\r\n    };\r\n    actions[3 /* PUSH_SUB_PATH */] = () => {\r\n        if (subPathDepth > 0) {\r\n            subPathDepth--;\r\n            mode = 4 /* IN_SUB_PATH */;\r\n            actions[0 /* APPEND */]();\r\n        }\r\n        else {\r\n            subPathDepth = 0;\r\n            if (key === undefined) {\r\n                return false;\r\n            }\r\n            key = formatSubPath(key);\r\n            if (key === false) {\r\n                return false;\r\n            }\r\n            else {\r\n                actions[1 /* PUSH */]();\r\n            }\r\n        }\r\n    };\r\n    function maybeUnescapeQuote() {\r\n        const nextChar = path[index + 1];\r\n        if ((mode === 5 /* IN_SINGLE_QUOTE */ &&\r\n            nextChar === \"'\" /* SINGLE_QUOTE */) ||\r\n            (mode === 6 /* IN_DOUBLE_QUOTE */ &&\r\n                nextChar === \"\\\"\" /* DOUBLE_QUOTE */)) {\r\n            index++;\r\n            newChar = '\\\\' + nextChar;\r\n            actions[0 /* APPEND */]();\r\n            return true;\r\n        }\r\n    }\r\n    while (mode !== null) {\r\n        index++;\r\n        c = path[index];\r\n        if (c === '\\\\' && maybeUnescapeQuote()) {\r\n            continue;\r\n        }\r\n        type = getPathCharType(c);\r\n        typeMap = pathStateMachine[mode];\r\n        transition = typeMap[type] || typeMap[\"l\" /* ELSE */] || 8 /* ERROR */;\r\n        // check parse error\r\n        if (transition === 8 /* ERROR */) {\r\n            return;\r\n        }\r\n        mode = transition[0];\r\n        if (transition[1] !== undefined) {\r\n            action = actions[transition[1]];\r\n            if (action) {\r\n                newChar = c;\r\n                if (action() === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        // check parse finish\r\n        if (mode === 7 /* AFTER_PATH */) {\r\n            return keys;\r\n        }\r\n    }\r\n}\r\n// path token cache\r\nconst cache = new Map();\r\n/**\r\n * key-value message resolver\r\n *\r\n * @remarks\r\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction resolveWithKeyValue(obj, path) {\r\n    return isObject(obj) ? obj[path] : null;\r\n}\r\n/**\r\n * message resolver\r\n *\r\n * @remarks\r\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction resolveValue(obj, path) {\r\n    // check object\r\n    if (!isObject(obj)) {\r\n        return null;\r\n    }\r\n    // parse path\r\n    let hit = cache.get(path);\r\n    if (!hit) {\r\n        hit = parse(path);\r\n        if (hit) {\r\n            cache.set(path, hit);\r\n        }\r\n    }\r\n    // check hit\r\n    if (!hit) {\r\n        return null;\r\n    }\r\n    // resolve path value\r\n    const len = hit.length;\r\n    let last = obj;\r\n    let i = 0;\r\n    while (i < len) {\r\n        const val = last[hit[i]];\r\n        if (val === undefined) {\r\n            return null;\r\n        }\r\n        last = val;\r\n        i++;\r\n    }\r\n    return last;\r\n}\n\nconst DEFAULT_MODIFIER = (str) => str;\r\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\r\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\r\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : values.join('');\r\nconst DEFAULT_INTERPOLATE = toDisplayString;\r\nfunction pluralDefault(choice, choicesLength) {\r\n    choice = Math.abs(choice);\r\n    if (choicesLength === 2) {\r\n        // prettier-ignore\r\n        return choice\r\n            ? choice > 1\r\n                ? 1\r\n                : 0\r\n            : 1;\r\n    }\r\n    return choice ? Math.min(choice, 2) : 0;\r\n}\r\nfunction getPluralIndex(options) {\r\n    // prettier-ignore\r\n    const index = isNumber(options.pluralIndex)\r\n        ? options.pluralIndex\r\n        : -1;\r\n    // prettier-ignore\r\n    return options.named && (isNumber(options.named.count) || isNumber(options.named.n))\r\n        ? isNumber(options.named.count)\r\n            ? options.named.count\r\n            : isNumber(options.named.n)\r\n                ? options.named.n\r\n                : index\r\n        : index;\r\n}\r\nfunction normalizeNamed(pluralIndex, props) {\r\n    if (!props.count) {\r\n        props.count = pluralIndex;\r\n    }\r\n    if (!props.n) {\r\n        props.n = pluralIndex;\r\n    }\r\n}\r\nfunction createMessageContext(options = {}) {\r\n    const locale = options.locale;\r\n    const pluralIndex = getPluralIndex(options);\r\n    const pluralRule = isObject(options.pluralRules) &&\r\n        isString(locale) &&\r\n        isFunction(options.pluralRules[locale])\r\n        ? options.pluralRules[locale]\r\n        : pluralDefault;\r\n    const orgPluralRule = isObject(options.pluralRules) &&\r\n        isString(locale) &&\r\n        isFunction(options.pluralRules[locale])\r\n        ? pluralDefault\r\n        : undefined;\r\n    const plural = (messages) => {\r\n        return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\r\n    };\r\n    const _list = options.list || [];\r\n    const list = (index) => _list[index];\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const _named = options.named || {};\r\n    isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\r\n    const named = (key) => _named[key];\r\n    function message(key) {\r\n        // prettier-ignore\r\n        const msg = isFunction(options.messages)\r\n            ? options.messages(key)\r\n            : isObject(options.messages)\r\n                ? options.messages[key]\r\n                : false;\r\n        return !msg\r\n            ? options.parent\r\n                ? options.parent.message(key) // resolve from parent messages\r\n                : DEFAULT_MESSAGE\r\n            : msg;\r\n    }\r\n    const _modifier = (name) => options.modifiers\r\n        ? options.modifiers[name]\r\n        : DEFAULT_MODIFIER;\r\n    const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize)\r\n        ? options.processor.normalize\r\n        : DEFAULT_NORMALIZE;\r\n    const interpolate = isPlainObject(options.processor) &&\r\n        isFunction(options.processor.interpolate)\r\n        ? options.processor.interpolate\r\n        : DEFAULT_INTERPOLATE;\r\n    const type = isPlainObject(options.processor) && isString(options.processor.type)\r\n        ? options.processor.type\r\n        : DEFAULT_MESSAGE_DATA_TYPE;\r\n    const linked = (key, ...args) => {\r\n        const [arg1, arg2] = args;\r\n        let type = 'text';\r\n        let modifier = '';\r\n        if (args.length === 1) {\r\n            if (isObject(arg1)) {\r\n                modifier = arg1.modifier || modifier;\r\n                type = arg1.type || type;\r\n            }\r\n            else if (isString(arg1)) {\r\n                modifier = arg1 || modifier;\r\n            }\r\n        }\r\n        else if (args.length === 2) {\r\n            if (isString(arg1)) {\r\n                modifier = arg1 || modifier;\r\n            }\r\n            if (isString(arg2)) {\r\n                type = arg2 || type;\r\n            }\r\n        }\r\n        let msg = message(key)(ctx);\r\n        // The message in vnode resolved with linked are returned as an array by processor.nomalize\r\n        if (type === 'vnode' && isArray(msg) && modifier) {\r\n            msg = msg[0];\r\n        }\r\n        return modifier ? _modifier(modifier)(msg, type) : msg;\r\n    };\r\n    const ctx = {\r\n        [\"list\" /* LIST */]: list,\r\n        [\"named\" /* NAMED */]: named,\r\n        [\"plural\" /* PLURAL */]: plural,\r\n        [\"linked\" /* LINKED */]: linked,\r\n        [\"message\" /* MESSAGE */]: message,\r\n        [\"type\" /* TYPE */]: type,\r\n        [\"interpolate\" /* INTERPOLATE */]: interpolate,\r\n        [\"normalize\" /* NORMALIZE */]: normalize\r\n    };\r\n    return ctx;\r\n}\n\nlet devtools = null;\r\nfunction setDevToolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction getDevToolsHook() {\r\n    return devtools;\r\n}\r\nfunction initI18nDevTools(i18n, version, meta) {\r\n    // TODO: queue if devtools is undefined\r\n    devtools &&\r\n        devtools.emit(IntlifyDevToolsHooks.I18nInit, {\r\n            timestamp: Date.now(),\r\n            i18n,\r\n            version,\r\n            meta\r\n        });\r\n}\r\nconst translateDevTools = /* #__PURE__*/ createDevToolsHook(IntlifyDevToolsHooks.FunctionTranslate);\r\nfunction createDevToolsHook(hook) {\r\n    return (payloads) => devtools && devtools.emit(hook, payloads);\r\n}\n\nconst CoreWarnCodes = {\r\n    NOT_FOUND_KEY: 1,\r\n    FALLBACK_TO_TRANSLATE: 2,\r\n    CANNOT_FORMAT_NUMBER: 3,\r\n    FALLBACK_TO_NUMBER_FORMAT: 4,\r\n    CANNOT_FORMAT_DATE: 5,\r\n    FALLBACK_TO_DATE_FORMAT: 6,\r\n    __EXTEND_POINT__: 7\r\n};\r\n/** @internal */\r\nconst warnMessages = {\r\n    [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\r\n    [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\r\n    [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\r\n    [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\r\n    [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\r\n    [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`\r\n};\r\nfunction getWarnMessage(code, ...args) {\r\n    return format(warnMessages[code], ...args);\r\n}\n\n/**\r\n * Fallback with simple implemenation\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a simple fallback algorithm.\r\n *\r\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction fallbackWithSimple(ctx, fallback, start // eslint-disable-line @typescript-eslint/no-unused-vars\r\n) {\r\n    // prettier-ignore\r\n    return [...new Set([\r\n            start,\r\n            ...(isArray(fallback)\r\n                ? fallback\r\n                : isObject(fallback)\r\n                    ? Object.keys(fallback)\r\n                    : isString(fallback)\r\n                        ? [fallback]\r\n                        : [start])\r\n        ])];\r\n}\r\n/**\r\n * Fallback with locale chain\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\r\n    const startLocale = isString(start) ? start : DEFAULT_LOCALE;\r\n    const context = ctx;\r\n    if (!context.__localeChainCache) {\r\n        context.__localeChainCache = new Map();\r\n    }\r\n    let chain = context.__localeChainCache.get(startLocale);\r\n    if (!chain) {\r\n        chain = [];\r\n        // first block defined by start\r\n        let block = [start];\r\n        // while any intervening block found\r\n        while (isArray(block)) {\r\n            block = appendBlockToChain(chain, block, fallback);\r\n        }\r\n        // prettier-ignore\r\n        // last block defined by default\r\n        const defaults = isArray(fallback) || !isPlainObject(fallback)\r\n            ? fallback\r\n            : fallback['default']\r\n                ? fallback['default']\r\n                : null;\r\n        // convert defaults to array\r\n        block = isString(defaults) ? [defaults] : defaults;\r\n        if (isArray(block)) {\r\n            appendBlockToChain(chain, block, false);\r\n        }\r\n        context.__localeChainCache.set(startLocale, chain);\r\n    }\r\n    return chain;\r\n}\r\nfunction appendBlockToChain(chain, block, blocks) {\r\n    let follow = true;\r\n    for (let i = 0; i < block.length && isBoolean(follow); i++) {\r\n        const locale = block[i];\r\n        if (isString(locale)) {\r\n            follow = appendLocaleToChain(chain, block[i], blocks);\r\n        }\r\n    }\r\n    return follow;\r\n}\r\nfunction appendLocaleToChain(chain, locale, blocks) {\r\n    let follow;\r\n    const tokens = locale.split('-');\r\n    do {\r\n        const target = tokens.join('-');\r\n        follow = appendItemToChain(chain, target, blocks);\r\n        tokens.splice(-1, 1);\r\n    } while (tokens.length && follow === true);\r\n    return follow;\r\n}\r\nfunction appendItemToChain(chain, target, blocks) {\r\n    let follow = false;\r\n    if (!chain.includes(target)) {\r\n        follow = true;\r\n        if (target) {\r\n            follow = target[target.length - 1] !== '!';\r\n            const locale = target.replace(/!/g, '');\r\n            chain.push(locale);\r\n            if ((isArray(blocks) || isPlainObject(blocks)) &&\r\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\r\n            ) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                follow = blocks[locale];\r\n            }\r\n        }\r\n    }\r\n    return follow;\r\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Intlify core-base version\r\n * @internal\r\n */\r\nconst VERSION = '9.2.2';\r\nconst NOT_REOSLVED = -1;\r\nconst DEFAULT_LOCALE = 'en-US';\r\nconst MISSING_RESOLVE_VALUE = '';\r\nconst capitalize = (str) => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\r\nfunction getDefaultLinkedModifiers() {\r\n    return {\r\n        upper: (val, type) => {\r\n            // prettier-ignore\r\n            return type === 'text' && isString(val)\r\n                ? val.toUpperCase()\r\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\r\n                    ? val.children.toUpperCase()\r\n                    : val;\r\n        },\r\n        lower: (val, type) => {\r\n            // prettier-ignore\r\n            return type === 'text' && isString(val)\r\n                ? val.toLowerCase()\r\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\r\n                    ? val.children.toLowerCase()\r\n                    : val;\r\n        },\r\n        capitalize: (val, type) => {\r\n            // prettier-ignore\r\n            return (type === 'text' && isString(val)\r\n                ? capitalize(val)\r\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\r\n                    ? capitalize(val.children)\r\n                    : val);\r\n        }\r\n    };\r\n}\r\nlet _compiler;\r\nfunction registerMessageCompiler(compiler) {\r\n    _compiler = compiler;\r\n}\r\nlet _resolver;\r\n/**\r\n * Register the message resolver\r\n *\r\n * @param resolver - A {@link MessageResolver} function\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction registerMessageResolver(resolver) {\r\n    _resolver = resolver;\r\n}\r\nlet _fallbacker;\r\n/**\r\n * Register the locale fallbacker\r\n *\r\n * @param fallbacker - A {@link LocaleFallbacker} function\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction registerLocaleFallbacker(fallbacker) {\r\n    _fallbacker = fallbacker;\r\n}\r\n// Additional Meta for Intlify DevTools\r\nlet _additionalMeta = null;\r\nconst setAdditionalMeta =  (meta) => {\r\n    _additionalMeta = meta;\r\n};\r\nconst getAdditionalMeta =  () => _additionalMeta;\r\nlet _fallbackContext = null;\r\nconst setFallbackContext = (context) => {\r\n    _fallbackContext = context;\r\n};\r\nconst getFallbackContext = () => _fallbackContext;\r\n// ID for CoreContext\r\nlet _cid = 0;\r\nfunction createCoreContext(options = {}) {\r\n    // setup options\r\n    const version = isString(options.version) ? options.version : VERSION;\r\n    const locale = isString(options.locale) ? options.locale : DEFAULT_LOCALE;\r\n    const fallbackLocale = isArray(options.fallbackLocale) ||\r\n        isPlainObject(options.fallbackLocale) ||\r\n        isString(options.fallbackLocale) ||\r\n        options.fallbackLocale === false\r\n        ? options.fallbackLocale\r\n        : locale;\r\n    const messages = isPlainObject(options.messages)\r\n        ? options.messages\r\n        : { [locale]: {} };\r\n    const datetimeFormats = isPlainObject(options.datetimeFormats)\r\n            ? options.datetimeFormats\r\n            : { [locale]: {} }\r\n        ;\r\n    const numberFormats = isPlainObject(options.numberFormats)\r\n            ? options.numberFormats\r\n            : { [locale]: {} }\r\n        ;\r\n    const modifiers = assign({}, options.modifiers || {}, getDefaultLinkedModifiers());\r\n    const pluralRules = options.pluralRules || {};\r\n    const missing = isFunction(options.missing) ? options.missing : null;\r\n    const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn)\r\n        ? options.missingWarn\r\n        : true;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : true;\r\n    const fallbackFormat = !!options.fallbackFormat;\r\n    const unresolving = !!options.unresolving;\r\n    const postTranslation = isFunction(options.postTranslation)\r\n        ? options.postTranslation\r\n        : null;\r\n    const processor = isPlainObject(options.processor) ? options.processor : null;\r\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\r\n        ? options.warnHtmlMessage\r\n        : true;\r\n    const escapeParameter = !!options.escapeParameter;\r\n    const messageCompiler = isFunction(options.messageCompiler)\r\n        ? options.messageCompiler\r\n        : _compiler;\r\n    const messageResolver = isFunction(options.messageResolver)\r\n        ? options.messageResolver\r\n        : _resolver || resolveWithKeyValue;\r\n    const localeFallbacker = isFunction(options.localeFallbacker)\r\n        ? options.localeFallbacker\r\n        : _fallbacker || fallbackWithSimple;\r\n    const fallbackContext = isObject(options.fallbackContext)\r\n        ? options.fallbackContext\r\n        : undefined;\r\n    const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\r\n    // setup internal options\r\n    const internalOptions = options;\r\n    const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters)\r\n            ? internalOptions.__datetimeFormatters\r\n            : new Map()\r\n        ;\r\n    const __numberFormatters = isObject(internalOptions.__numberFormatters)\r\n            ? internalOptions.__numberFormatters\r\n            : new Map()\r\n        ;\r\n    const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\r\n    _cid++;\r\n    const context = {\r\n        version,\r\n        cid: _cid,\r\n        locale,\r\n        fallbackLocale,\r\n        messages,\r\n        modifiers,\r\n        pluralRules,\r\n        missing,\r\n        missingWarn,\r\n        fallbackWarn,\r\n        fallbackFormat,\r\n        unresolving,\r\n        postTranslation,\r\n        processor,\r\n        warnHtmlMessage,\r\n        escapeParameter,\r\n        messageCompiler,\r\n        messageResolver,\r\n        localeFallbacker,\r\n        fallbackContext,\r\n        onWarn,\r\n        __meta\r\n    };\r\n    {\r\n        context.datetimeFormats = datetimeFormats;\r\n        context.numberFormats = numberFormats;\r\n        context.__datetimeFormatters = __datetimeFormatters;\r\n        context.__numberFormatters = __numberFormatters;\r\n    }\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        context.__v_emitter =\r\n            internalOptions.__v_emitter != null\r\n                ? internalOptions.__v_emitter\r\n                : undefined;\r\n    }\r\n    // NOTE: experimental !!\r\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\r\n        initI18nDevTools(context, version, __meta);\r\n    }\r\n    return context;\r\n}\r\n/** @internal */\r\nfunction isTranslateFallbackWarn(fallback, key) {\r\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\r\n}\r\n/** @internal */\r\nfunction isTranslateMissingWarn(missing, key) {\r\n    return missing instanceof RegExp ? missing.test(key) : missing;\r\n}\r\n/** @internal */\r\nfunction handleMissing(context, key, locale, missingWarn, type) {\r\n    const { missing, onWarn } = context;\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const emitter = context.__v_emitter;\r\n        if (emitter) {\r\n            emitter.emit(\"missing\" /* MISSING */, {\r\n                locale,\r\n                key,\r\n                type,\r\n                groupId: `${type}:${key}`\r\n            });\r\n        }\r\n    }\r\n    if (missing !== null) {\r\n        const ret = missing(context, locale, key, type);\r\n        return isString(ret) ? ret : key;\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && isTranslateMissingWarn(missingWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, { key, locale }));\r\n        }\r\n        return key;\r\n    }\r\n}\r\n/** @internal */\r\nfunction updateFallbackLocale(ctx, locale, fallback) {\r\n    const context = ctx;\r\n    context.__localeChainCache = new Map();\r\n    ctx.localeFallbacker(ctx, fallback, locale);\r\n}\r\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst RE_HTML_TAG = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\r\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\r\nfunction checkHtmlMessage(source, options) {\r\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\r\n        ? options.warnHtmlMessage\r\n        : true;\r\n    if (warnHtmlMessage && RE_HTML_TAG.test(source)) {\r\n        warn(format(WARN_MESSAGE, { source }));\r\n    }\r\n}\r\nconst defaultOnCacheKey = (source) => source;\r\nlet compileCache = Object.create(null);\r\nfunction clearCompileCache() {\r\n    compileCache = Object.create(null);\r\n}\r\nfunction compileToFunction(source, options = {}) {\r\n    {\r\n        // check HTML message\r\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(source, options);\r\n        // check caches\r\n        const onCacheKey = options.onCacheKey || defaultOnCacheKey;\r\n        const key = onCacheKey(source);\r\n        const cached = compileCache[key];\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        // compile error detecting\r\n        let occurred = false;\r\n        const onError = options.onError || defaultOnError;\r\n        options.onError = (err) => {\r\n            occurred = true;\r\n            onError(err);\r\n        };\r\n        // compile\r\n        const { code } = baseCompile(source, options);\r\n        // evaluate function\r\n        const msg = new Function(`return ${code}`)();\r\n        // if occurred compile error, don't cache\r\n        return !occurred ? (compileCache[key] = msg) : msg;\r\n    }\r\n}\n\nlet code = CompileErrorCodes.__EXTEND_POINT__;\r\nconst inc = () => ++code;\r\nconst CoreErrorCodes = {\r\n    INVALID_ARGUMENT: code,\r\n    INVALID_DATE_ARGUMENT: inc(),\r\n    INVALID_ISO_DATE_ARGUMENT: inc(),\r\n    __EXTEND_POINT__: inc() // 18\r\n};\r\nfunction createCoreError(code) {\r\n    return createCompileError(code, null, (process.env.NODE_ENV !== 'production') ? { messages: errorMessages } : undefined);\r\n}\r\n/** @internal */\r\nconst errorMessages = {\r\n    [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\r\n    [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' +\r\n        'Make sure your Date represents a valid date.',\r\n    [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string'\r\n};\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\r\nconst isMessageFunction = (val) => isFunction(val);\r\n// implementation of `translate` function\r\nfunction translate(context, ...args) {\r\n    const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;\r\n    const [key, options] = parseTranslateArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const escapeParameter = isBoolean(options.escapeParameter)\r\n        ? options.escapeParameter\r\n        : context.escapeParameter;\r\n    const resolvedMessage = !!options.resolvedMessage;\r\n    // prettier-ignore\r\n    const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\r\n        ? !isBoolean(options.default)\r\n            ? options.default\r\n            : (!messageCompiler ? () => key : key)\r\n        : fallbackFormat // default by `fallbackFormat` option\r\n            ? (!messageCompiler ? () => key : key)\r\n            : '';\r\n    const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\r\n    const locale = isString(options.locale) ? options.locale : context.locale;\r\n    // escape params\r\n    escapeParameter && escapeParams(options);\r\n    // resolve message format\r\n    // eslint-disable-next-line prefer-const\r\n    let [formatScope, targetLocale, message] = !resolvedMessage\r\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\r\n        : [\r\n            key,\r\n            locale,\r\n            messages[locale] || {}\r\n        ];\r\n    // NOTE:\r\n    //  Fix to work around `ssrTransfrom` bug in Vite.\r\n    //  https://github.com/vitejs/vite/issues/4306\r\n    //  To get around this, use temporary variables.\r\n    //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\r\n    let format = formatScope;\r\n    // if you use default message, set it as message format!\r\n    let cacheBaseKey = key;\r\n    if (!resolvedMessage &&\r\n        !(isString(format) || isMessageFunction(format))) {\r\n        if (enableDefaultMsg) {\r\n            format = defaultMsgOrKey;\r\n            cacheBaseKey = format;\r\n        }\r\n    }\r\n    // checking message format and target locale\r\n    if (!resolvedMessage &&\r\n        (!(isString(format) || isMessageFunction(format)) ||\r\n            !isString(targetLocale))) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && isString(format) && context.messageCompiler == null) {\r\n        warn(`The message format compilation is not supported in this build. ` +\r\n            `Because message compiler isn't included. ` +\r\n            `You need to pre-compilation all message format. ` +\r\n            `So translate function return '${key}'.`);\r\n        return key;\r\n    }\r\n    // setup compile error detecting\r\n    let occurred = false;\r\n    const errorDetector = () => {\r\n        occurred = true;\r\n    };\r\n    // compile message format\r\n    const msg = !isMessageFunction(format)\r\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector)\r\n        : format;\r\n    // if occurred compile error, return the message format\r\n    if (occurred) {\r\n        return format;\r\n    }\r\n    // evaluate message with context\r\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\r\n    const msgContext = createMessageContext(ctxOptions);\r\n    const messaged = evaluateMessage(context, msg, msgContext);\r\n    // if use post translation option, proceed it with handler\r\n    const ret = postTranslation\r\n        ? postTranslation(messaged, key)\r\n        : messaged;\r\n    // NOTE: experimental !!\r\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\r\n        // prettier-ignore\r\n        const payloads = {\r\n            timestamp: Date.now(),\r\n            key: isString(key)\r\n                ? key\r\n                : isMessageFunction(format)\r\n                    ? format.key\r\n                    : '',\r\n            locale: targetLocale || (isMessageFunction(format)\r\n                ? format.locale\r\n                : ''),\r\n            format: isString(format)\r\n                ? format\r\n                : isMessageFunction(format)\r\n                    ? format.source\r\n                    : '',\r\n            message: ret\r\n        };\r\n        payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\r\n        translateDevTools(payloads);\r\n    }\r\n    return ret;\r\n}\r\nfunction escapeParams(options) {\r\n    if (isArray(options.list)) {\r\n        options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\r\n    }\r\n    else if (isObject(options.named)) {\r\n        Object.keys(options.named).forEach(key => {\r\n            if (isString(options.named[key])) {\r\n                options.named[key] = escapeHtml(options.named[key]);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\r\n    const { messages, onWarn, messageResolver: resolveValue, localeFallbacker } = context;\r\n    const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    let message = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'translate';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit(\"fallback\" /* FALBACK */, {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        message =\r\n            messages[targetLocale] || {};\r\n        // for vue-devtools timeline event\r\n        let start = null;\r\n        let startTag;\r\n        let endTag;\r\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n            start = window.performance.now();\r\n            startTag = 'intlify-message-resolve-start';\r\n            endTag = 'intlify-message-resolve-end';\r\n            mark && mark(startTag);\r\n        }\r\n        if ((format = resolveValue(message, key)) === null) {\r\n            // if null, resolve with object key path\r\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n            const end = window.performance.now();\r\n            const emitter = context.__v_emitter;\r\n            if (emitter && start && format) {\r\n                emitter.emit(\"message-resolve\" /* MESSAGE_RESOLVE */, {\r\n                    type: \"message-resolve\" /* MESSAGE_RESOLVE */,\r\n                    key,\r\n                    message: format,\r\n                    time: end - start,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n            if (startTag && endTag && mark && measure) {\r\n                mark(endTag);\r\n                measure('intlify message resolve', startTag, endTag);\r\n            }\r\n        }\r\n        if (isString(format) || isFunction(format))\r\n            break;\r\n        const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        key, targetLocale, missingWarn, type);\r\n        if (missingRet !== key) {\r\n            format = missingRet;\r\n        }\r\n        from = to;\r\n    }\r\n    return [format, targetLocale, message];\r\n}\r\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector) {\r\n    const { messageCompiler, warnHtmlMessage } = context;\r\n    if (isMessageFunction(format)) {\r\n        const msg = format;\r\n        msg.locale = msg.locale || targetLocale;\r\n        msg.key = msg.key || key;\r\n        return msg;\r\n    }\r\n    if (messageCompiler == null) {\r\n        const msg = (() => format);\r\n        msg.locale = targetLocale;\r\n        msg.key = key;\r\n        return msg;\r\n    }\r\n    // for vue-devtools timeline event\r\n    let start = null;\r\n    let startTag;\r\n    let endTag;\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        start = window.performance.now();\r\n        startTag = 'intlify-message-compilation-start';\r\n        endTag = 'intlify-message-compilation-end';\r\n        mark && mark(startTag);\r\n    }\r\n    const msg = messageCompiler(format, getCompileOptions(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, errorDetector));\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        const end = window.performance.now();\r\n        const emitter = context.__v_emitter;\r\n        if (emitter && start) {\r\n            emitter.emit(\"message-compilation\" /* MESSAGE_COMPILATION */, {\r\n                type: \"message-compilation\" /* MESSAGE_COMPILATION */,\r\n                message: format,\r\n                time: end - start,\r\n                groupId: `${'translate'}:${key}`\r\n            });\r\n        }\r\n        if (startTag && endTag && mark && measure) {\r\n            mark(endTag);\r\n            measure('intlify message compilation', startTag, endTag);\r\n        }\r\n    }\r\n    msg.locale = targetLocale;\r\n    msg.key = key;\r\n    msg.source = format;\r\n    return msg;\r\n}\r\nfunction evaluateMessage(context, msg, msgCtx) {\r\n    // for vue-devtools timeline event\r\n    let start = null;\r\n    let startTag;\r\n    let endTag;\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        start = window.performance.now();\r\n        startTag = 'intlify-message-evaluation-start';\r\n        endTag = 'intlify-message-evaluation-end';\r\n        mark && mark(startTag);\r\n    }\r\n    const messaged = msg(msgCtx);\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        const end = window.performance.now();\r\n        const emitter = context.__v_emitter;\r\n        if (emitter && start) {\r\n            emitter.emit(\"message-evaluation\" /* MESSAGE_EVALUATION */, {\r\n                type: \"message-evaluation\" /* MESSAGE_EVALUATION */,\r\n                value: messaged,\r\n                time: end - start,\r\n                groupId: `${'translate'}:${msg.key}`\r\n            });\r\n        }\r\n        if (startTag && endTag && mark && measure) {\r\n            mark(endTag);\r\n            measure('intlify message evaluation', startTag, endTag);\r\n        }\r\n    }\r\n    return messaged;\r\n}\r\n/** @internal */\r\nfunction parseTranslateArgs(...args) {\r\n    const [arg1, arg2, arg3] = args;\r\n    const options = {};\r\n    if (!isString(arg1) && !isNumber(arg1) && !isMessageFunction(arg1)) {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    // prettier-ignore\r\n    const key = isNumber(arg1)\r\n        ? String(arg1)\r\n        : isMessageFunction(arg1)\r\n            ? arg1\r\n            : arg1;\r\n    if (isNumber(arg2)) {\r\n        options.plural = arg2;\r\n    }\r\n    else if (isString(arg2)) {\r\n        options.default = arg2;\r\n    }\r\n    else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\r\n        options.named = arg2;\r\n    }\r\n    else if (isArray(arg2)) {\r\n        options.list = arg2;\r\n    }\r\n    if (isNumber(arg3)) {\r\n        options.plural = arg3;\r\n    }\r\n    else if (isString(arg3)) {\r\n        options.default = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        assign(options, arg3);\r\n    }\r\n    return [key, options];\r\n}\r\nfunction getCompileOptions(context, locale, key, source, warnHtmlMessage, errorDetector) {\r\n    return {\r\n        warnHtmlMessage,\r\n        onError: (err) => {\r\n            errorDetector && errorDetector(err);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const message = `Message compilation error: ${err.message}`;\r\n                const codeFrame = err.location &&\r\n                    generateCodeFrame(source, err.location.start.offset, err.location.end.offset);\r\n                const emitter = context.__v_emitter;\r\n                if (emitter) {\r\n                    emitter.emit(\"compile-error\" /* COMPILE_ERROR */, {\r\n                        message: source,\r\n                        error: err.message,\r\n                        start: err.location && err.location.start.offset,\r\n                        end: err.location && err.location.end.offset,\r\n                        groupId: `${'translate'}:${key}`\r\n                    });\r\n                }\r\n                console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n            }\r\n            else {\r\n                throw err;\r\n            }\r\n        },\r\n        onCacheKey: (source) => generateFormatCacheKey(locale, key, source)\r\n    };\r\n}\r\nfunction getMessageContextOptions(context, locale, message, options) {\r\n    const { modifiers, pluralRules, messageResolver: resolveValue, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;\r\n    const resolveMessage = (key) => {\r\n        let val = resolveValue(message, key);\r\n        // fallback to root context\r\n        if (val == null && fallbackContext) {\r\n            const [, , message] = resolveMessageFormat(fallbackContext, key, locale, fallbackLocale, fallbackWarn, missingWarn);\r\n            val = resolveValue(message, key);\r\n        }\r\n        if (isString(val)) {\r\n            let occurred = false;\r\n            const errorDetector = () => {\r\n                occurred = true;\r\n            };\r\n            const msg = compileMessageFormat(context, key, locale, val, key, errorDetector);\r\n            return !occurred\r\n                ? msg\r\n                : NOOP_MESSAGE_FUNCTION;\r\n        }\r\n        else if (isMessageFunction(val)) {\r\n            return val;\r\n        }\r\n        else {\r\n            // TODO: should be implemented warning message\r\n            return NOOP_MESSAGE_FUNCTION;\r\n        }\r\n    };\r\n    const ctxOptions = {\r\n        locale,\r\n        modifiers,\r\n        pluralRules,\r\n        messages: resolveMessage\r\n    };\r\n    if (context.processor) {\r\n        ctxOptions.processor = context.processor;\r\n    }\r\n    if (options.list) {\r\n        ctxOptions.list = options.list;\r\n    }\r\n    if (options.named) {\r\n        ctxOptions.named = options.named;\r\n    }\r\n    if (isNumber(options.plural)) {\r\n        ctxOptions.pluralIndex = options.plural;\r\n    }\r\n    return ctxOptions;\r\n}\n\nconst intlDefined = typeof Intl !== 'undefined';\r\nconst Availabilities = {\r\n    dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\r\n    numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\r\n};\n\n// implementation of `datetime` function\r\nfunction datetime(context, ...args) {\r\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\r\n    const { __datetimeFormatters } = context;\r\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.dateTimeFormat) {\r\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\r\n        return MISSING_RESOLVE_VALUE;\r\n    }\r\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const part = !!options.part;\r\n    const locale = isString(options.locale) ? options.locale : context.locale;\r\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    fallbackLocale, locale);\r\n    if (!isString(key) || key === '') {\r\n        return new Intl.DateTimeFormat(locale, overrides).format(value);\r\n    }\r\n    // resolve format\r\n    let datetimeFormat = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'datetime format';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit(\"fallback\" /* FALBACK */, {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        datetimeFormat =\r\n            datetimeFormats[targetLocale] || {};\r\n        format = datetimeFormat[key];\r\n        if (isPlainObject(format))\r\n            break;\r\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        from = to;\r\n    }\r\n    // checking format and target locale\r\n    if (!isPlainObject(format) || !isString(targetLocale)) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    let id = `${targetLocale}__${key}`;\r\n    if (!isEmptyObject(overrides)) {\r\n        id = `${id}__${JSON.stringify(overrides)}`;\r\n    }\r\n    let formatter = __datetimeFormatters.get(id);\r\n    if (!formatter) {\r\n        formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\r\n        __datetimeFormatters.set(id, formatter);\r\n    }\r\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\r\n}\r\n/** @internal */\r\nconst DATETIME_FORMAT_OPTIONS_KEYS = [\r\n    'localeMatcher',\r\n    'weekday',\r\n    'era',\r\n    'year',\r\n    'month',\r\n    'day',\r\n    'hour',\r\n    'minute',\r\n    'second',\r\n    'timeZoneName',\r\n    'formatMatcher',\r\n    'hour12',\r\n    'timeZone',\r\n    'dateStyle',\r\n    'timeStyle',\r\n    'calendar',\r\n    'dayPeriod',\r\n    'numberingSystem',\r\n    'hourCycle',\r\n    'fractionalSecondDigits'\r\n];\r\n/** @internal */\r\nfunction parseDateTimeArgs(...args) {\r\n    const [arg1, arg2, arg3, arg4] = args;\r\n    const options = {};\r\n    let overrides = {};\r\n    let value;\r\n    if (isString(arg1)) {\r\n        // Only allow ISO strings - other date formats are often supported,\r\n        // but may cause different results in different browsers.\r\n        const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\r\n        if (!matches) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\r\n        }\r\n        // Some browsers can not parse the iso datetime separated by space,\r\n        // this is a compromise solution by replace the 'T'/' ' with 'T'\r\n        const dateTime = matches[3]\r\n            ? matches[3].trim().startsWith('T')\r\n                ? `${matches[1].trim()}${matches[3].trim()}`\r\n                : `${matches[1].trim()}T${matches[3].trim()}`\r\n            : matches[1].trim();\r\n        value = new Date(dateTime);\r\n        try {\r\n            // This will fail if the date is not valid\r\n            value.toISOString();\r\n        }\r\n        catch (e) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\r\n        }\r\n    }\r\n    else if (isDate(arg1)) {\r\n        if (isNaN(arg1.getTime())) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\r\n        }\r\n        value = arg1;\r\n    }\r\n    else if (isNumber(arg1)) {\r\n        value = arg1;\r\n    }\r\n    else {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    if (isString(arg2)) {\r\n        options.key = arg2;\r\n    }\r\n    else if (isPlainObject(arg2)) {\r\n        Object.keys(arg2).forEach(key => {\r\n            if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\r\n                overrides[key] = arg2[key];\r\n            }\r\n            else {\r\n                options[key] = arg2[key];\r\n            }\r\n        });\r\n    }\r\n    if (isString(arg3)) {\r\n        options.locale = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        overrides = arg3;\r\n    }\r\n    if (isPlainObject(arg4)) {\r\n        overrides = arg4;\r\n    }\r\n    return [options.key || '', value, options, overrides];\r\n}\r\n/** @internal */\r\nfunction clearDateTimeFormat(ctx, locale, format) {\r\n    const context = ctx;\r\n    for (const key in format) {\r\n        const id = `${locale}__${key}`;\r\n        if (!context.__datetimeFormatters.has(id)) {\r\n            continue;\r\n        }\r\n        context.__datetimeFormatters.delete(id);\r\n    }\r\n}\n\n// implementation of `number` function\r\nfunction number(context, ...args) {\r\n    const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\r\n    const { __numberFormatters } = context;\r\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.numberFormat) {\r\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\r\n        return MISSING_RESOLVE_VALUE;\r\n    }\r\n    const [key, value, options, overrides] = parseNumberArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const part = !!options.part;\r\n    const locale = isString(options.locale) ? options.locale : context.locale;\r\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    fallbackLocale, locale);\r\n    if (!isString(key) || key === '') {\r\n        return new Intl.NumberFormat(locale, overrides).format(value);\r\n    }\r\n    // resolve format\r\n    let numberFormat = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'number format';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit(\"fallback\" /* FALBACK */, {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        numberFormat =\r\n            numberFormats[targetLocale] || {};\r\n        format = numberFormat[key];\r\n        if (isPlainObject(format))\r\n            break;\r\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        from = to;\r\n    }\r\n    // checking format and target locale\r\n    if (!isPlainObject(format) || !isString(targetLocale)) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    let id = `${targetLocale}__${key}`;\r\n    if (!isEmptyObject(overrides)) {\r\n        id = `${id}__${JSON.stringify(overrides)}`;\r\n    }\r\n    let formatter = __numberFormatters.get(id);\r\n    if (!formatter) {\r\n        formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\r\n        __numberFormatters.set(id, formatter);\r\n    }\r\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\r\n}\r\n/** @internal */\r\nconst NUMBER_FORMAT_OPTIONS_KEYS = [\r\n    'localeMatcher',\r\n    'style',\r\n    'currency',\r\n    'currencyDisplay',\r\n    'currencySign',\r\n    'useGrouping',\r\n    'minimumIntegerDigits',\r\n    'minimumFractionDigits',\r\n    'maximumFractionDigits',\r\n    'minimumSignificantDigits',\r\n    'maximumSignificantDigits',\r\n    'compactDisplay',\r\n    'notation',\r\n    'signDisplay',\r\n    'unit',\r\n    'unitDisplay',\r\n    'roundingMode',\r\n    'roundingPriority',\r\n    'roundingIncrement',\r\n    'trailingZeroDisplay'\r\n];\r\n/** @internal */\r\nfunction parseNumberArgs(...args) {\r\n    const [arg1, arg2, arg3, arg4] = args;\r\n    const options = {};\r\n    let overrides = {};\r\n    if (!isNumber(arg1)) {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    const value = arg1;\r\n    if (isString(arg2)) {\r\n        options.key = arg2;\r\n    }\r\n    else if (isPlainObject(arg2)) {\r\n        Object.keys(arg2).forEach(key => {\r\n            if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\r\n                overrides[key] = arg2[key];\r\n            }\r\n            else {\r\n                options[key] = arg2[key];\r\n            }\r\n        });\r\n    }\r\n    if (isString(arg3)) {\r\n        options.locale = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        overrides = arg3;\r\n    }\r\n    if (isPlainObject(arg4)) {\r\n        overrides = arg4;\r\n    }\r\n    return [options.key || '', value, options, overrides];\r\n}\r\n/** @internal */\r\nfunction clearNumberFormat(ctx, locale, format) {\r\n    const context = ctx;\r\n    for (const key in format) {\r\n        const id = `${locale}__${key}`;\r\n        if (!context.__numberFormatters.has(id)) {\r\n            continue;\r\n        }\r\n        context.__numberFormatters.delete(id);\r\n    }\r\n}\n\n// TODO: we could not exports for Node native ES Moudles yet...\r\n{\r\n    if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\r\n        getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\r\n    }\r\n}\n\nexport { CoreErrorCodes, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compileToFunction, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getWarnMessage, handleMissing, initI18nDevTools, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}