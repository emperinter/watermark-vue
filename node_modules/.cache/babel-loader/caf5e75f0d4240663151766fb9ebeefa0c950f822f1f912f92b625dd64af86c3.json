{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"canvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), _createElementVNode(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.downloadImage && $options.downloadImage(...args))\n  }, \"Download\")]);\n}","map":{"version":3,"names":["ref","_createElementBlock","_createElementVNode","type","onChange","_cache","args","$options","handleFileUpload","_hoisted_1","onClick","downloadImage"],"sources":["/Users/emperinter/app/HTML/watermark-vue/src/components/ImageWatermark.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"file\" @change=\"handleFileUpload\">\n    <canvas ref=\"canvas\"></canvas>\n    <button @click=\"downloadImage\">Download</button>\n  </div>\n</template>\n\n<script>\n// import watermark from 'watermarkjs';\n\nexport default {\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n\n      reader.onload = (event) => {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = this.$refs.canvas;\n          const context = canvas.getContext('2d');\n          canvas.width = img.width;\n          canvas.height = img.height;\n          context.drawImage(img, 0, 0, canvas.width, canvas.height);\n          const watermarkImg = new Image();\n          watermarkImg.onload = () => {\n            context.drawImage(watermarkImg, canvas.width / 2 - watermarkImg.width / 2, canvas.height / 2 - watermarkImg.height / 2);\n          };\n          watermarkImg.src = `data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 ${canvas.width} ${canvas.height}'%3E%3Ctext x='${canvas.width / 2}' y='${canvas.height / 2}' font-family='Arial' font-size='50' fill='black' text-anchor='middle' transform='rotate(-45 ${canvas.width / 2} ${canvas.height / 2})'%3EMy Custom Watermark%3C/text%3E%3C/svg%3E`;\n        };\n        img.src = event.target.result;\n      };\n\n      reader.readAsDataURL(file);\n    },\n    downloadImage() {\n      const canvas = this.$refs.canvas;\n      const dataURL = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.download = 'watermarked-image.png';\n      link.href = dataURL;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n  },\n};\n</script>\n"],"mappings":";;EAGYA,GAAG,EAAC;AAAQ;;uBAFtBC,mBAAA,CAIM,cAHJC,mBAAA,CAA8C;IAAvCC,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;qCAC5CJ,mBAAA,CAA8B,UAA9BO,UAA8B,+BAC9BP,mBAAA,CAAgD;IAAvCQ,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAI,aAAA,IAAAJ,QAAA,CAAAI,aAAA,IAAAL,IAAA,CAAa;KAAE,UAAQ,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}