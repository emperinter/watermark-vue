{"ast":null,"code":"export default {\n  data() {\n    return {\n      watermarkText: this.$t('WaterMarkText'),\n      fontSize: 18,\n      color: '#000000',\n      angle: -45,\n      opacity: 0.5,\n      padding: 30,\n      imageLoaded: false,\n      imageSrc: null\n    };\n  },\n  methods: {\n    //   handleFileUpload(event) {\n    //     const file = event.target.files[0];\n    //     const reader = new FileReader();\n\n    //     reader.onload = (event) => {\n    //       this.imageLoaded = true;\n    //       this.imageSrc = event.target.result;\n    //       this.drawWatermark();\n    //     };\n\n    //     reader.readAsDataURL(file);\n    //   },\n    handleFileUpload() {\n      const input = this.$refs.uploadInput;\n      input.click();\n    },\n    handleFileChange(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = event => {\n        this.imageLoaded = true;\n        this.imageSrc = event.target.result;\n        this.drawWatermark();\n      };\n      reader.readAsDataURL(file);\n    },\n    drawWatermark() {\n      const canvas = this.$refs.canvas;\n      const context = canvas.getContext('2d');\n      const img = new Image();\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        context.drawImage(img, 0, 0, canvas.width, canvas.height);\n        const watermarkCanvas = document.createElement('canvas');\n        watermarkCanvas.width = canvas.width / 3;\n        watermarkCanvas.height = canvas.height / 3;\n        const watermarkContext = watermarkCanvas.getContext('2d');\n        watermarkContext.font = `${this.fontSize}px Arial`;\n        watermarkContext.fillStyle = `${this.color}${Math.floor(this.opacity * 255).toString(16)}`;\n        watermarkContext.textAlign = 'center';\n        watermarkContext.textBaseline = 'middle';\n        const watermarkWidth = watermarkContext.measureText(this.watermarkText).width;\n        const watermarkHeight = this.fontSize;\n        const watermarkPadding = this.padding;\n        const watermarkMaxX = canvas.width - watermarkWidth - watermarkPadding;\n        const watermarkMaxY = canvas.height - watermarkHeight - watermarkPadding;\n        const angle = (Math.random() - 0.5) * Math.PI / 4;\n        var x = 0;\n        var y = 0;\n        for (let i = 0; i < 5000; i++) {\n          watermarkContext.save();\n          watermarkContext.translate(x + watermarkWidth / 3, y + watermarkHeight / 3);\n          watermarkContext.rotate(angle);\n          watermarkContext.fillText(this.watermarkText, 0, 0, watermarkMaxX - x);\n          watermarkContext.restore();\n          x += watermarkWidth + watermarkPadding;\n          if (x > watermarkMaxX) {\n            x = 0;\n            y += watermarkHeight + watermarkPadding;\n            if (y > watermarkMaxY) {\n              break;\n            }\n          }\n        }\n        const watermarkImg = new Image();\n        watermarkImg.onload = () => {\n          context.clearRect(0, 0, canvas.width, canvas.height);\n          context.drawImage(img, 0, 0, canvas.width / 3, canvas.height / 3);\n          context.drawImage(watermarkImg, 0, 0);\n        };\n        watermarkImg.src = watermarkCanvas.toDataURL();\n      };\n      img.src = this.imageSrc;\n    },\n    addWatermark() {\n      if (this.imageLoaded) {\n        this.drawWatermark();\n      }\n    },\n    downloadImage() {\n      const canvas = this.$refs.canvas;\n      const dataURL = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.download = 'watermarked-image.png';\n      link.href = dataURL;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n};","map":{"version":3,"names":["data","watermarkText","$t","fontSize","color","angle","opacity","padding","imageLoaded","imageSrc","methods","handleFileUpload","input","$refs","uploadInput","click","handleFileChange","event","file","target","files","reader","FileReader","onload","result","drawWatermark","readAsDataURL","canvas","context","getContext","img","Image","width","height","drawImage","watermarkCanvas","document","createElement","watermarkContext","font","fillStyle","Math","floor","toString","textAlign","textBaseline","watermarkWidth","measureText","watermarkHeight","watermarkPadding","watermarkMaxX","watermarkMaxY","random","PI","x","y","i","save","translate","rotate","fillText","restore","watermarkImg","clearRect","src","toDataURL","addWatermark","downloadImage","dataURL","link","download","href","body","appendChild","removeChild"],"sources":["/Users/emperinter/app/HTML/watermark-vue/src/components/ImageWatermark.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"options\">\n        <div class=\"option\">\n            <el-upload\n            v-model:file-list=\"fileList\"\n            class=\"upload-demo\"\n            action=\"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\"\n            multiple\n            :on-preview=\"handlePreview\"\n            :on-remove=\"handleRemove\"\n            :before-remove=\"beforeRemove\"\n            :limit=\"3\"\n            :on-exceed=\"handleExceed\">\n            <el-button type=\"primary\">Click to upload</el-button>\n            <input\n                ref=\"uploadInput\"\n                type=\"file\"\n                style=\"display: none;\"\n                @change=\"handleFileUpload\"\n                multiple\n                />\n            </el-upload>\n        </div>\n      <div class=\"option\">\n        <label>{{ $t('Watermark Text') }}</label>\n        <el-input v-model=\"watermarkText\"></el-input>\n      </div>\n      <div class=\"option\">\n        <label>{{ $t('Font Size')}}</label>\n        <el-input-number v-model.number=\"fontSize\"></el-input-number>\n      </div>\n      <div class=\"option\">\n        <label>{{ $t('Font Angle')}}</label>\n        <el-input-number v-model.number=\"angle\"></el-input-number>\n      </div>      \n      <div class=\"option\">\n        <label>{{ $t('WaterMark Padding')}}</label>\n        <el-input-number v-model.number=\"padding\"></el-input-number>\n      </div>      \n      <div class=\"option\">\n        <label>{{ $t('Font Color')}}:</label>\n        <el-color-picker v-model=\"color\"></el-color-picker>\n      </div>\n      <div class=\"option\">\n        <label>{{ $t('Font Opacity')}}:</label>\n        <el-slider v-model.number=\"opacity\" :min=\"0\" :max=\"1\" :step=\"0.05\"></el-slider>\n      </div>\n      <div class=\"option\">\n        <el-button type=\"primary\" @click=\"addWatermark\">{{ $t('Add Watermark')}}</el-button>\n      </div>\n      <div class=\"option\">\n        <el-button type=\"primary\" @click=\"downloadImage\">{{ $t('Download') }}</el-button>\n      </div>\n    </div>\n    <div class=\"canvas-container\">\n      <canvas ref=\"canvas\"></canvas>\n    </div>\n    </div>\n</template>\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n}\n\n.options {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  width: 300px;\n  margin-right: 20px;\n}\n\n.option {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.canvas-container {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  background-color: gray;\n}\n\ncanvas {\n  max-width: 100%;\n  max-height: 100%;\n}\n</style>\n\n  \n  <script>\n  export default {\n    data() {\n      return {\n        watermarkText: this.$t('WaterMarkText'),\n        fontSize: 18,\n        color: '#000000',\n        angle: -45,\n        opacity: 0.5,\n        padding: 30,\n        imageLoaded: false,\n        imageSrc: null,\n      };\n    },\n    methods: {\n    //   handleFileUpload(event) {\n    //     const file = event.target.files[0];\n    //     const reader = new FileReader();\n  \n    //     reader.onload = (event) => {\n    //       this.imageLoaded = true;\n    //       this.imageSrc = event.target.result;\n    //       this.drawWatermark();\n    //     };\n  \n    //     reader.readAsDataURL(file);\n    //   },\n    handleFileUpload() {\n            const input = this.$refs.uploadInput;\n            input.click();\n        },\n        handleFileChange(event) {\n            const file = event.target.files[0];\n            const reader = new FileReader();\n\n            reader.onload = (event) => {\n            this.imageLoaded = true;\n            this.imageSrc = event.target.result;\n            this.drawWatermark();\n            };\n\n            reader.readAsDataURL(file);\n        },\n      drawWatermark() {\n        const canvas = this.$refs.canvas;\n        const context = canvas.getContext('2d');\n        const img = new Image();\n        img.onload = () => {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          context.drawImage(img, 0, 0, canvas.width, canvas.height);\n          const watermarkCanvas = document.createElement('canvas');\n          watermarkCanvas.width = canvas.width / 3;\n          watermarkCanvas.height = canvas.height / 3;\n          const watermarkContext = watermarkCanvas.getContext('2d');\n          watermarkContext.font = `${this.fontSize}px Arial`;\n          watermarkContext.fillStyle = `${this.color}${Math.floor(this.opacity * 255).toString(16)}`\n          watermarkContext.textAlign = 'center';\n          watermarkContext.textBaseline = 'middle';\n          const watermarkWidth = watermarkContext.measureText(this.watermarkText).width;\n          const watermarkHeight = this.fontSize;\n          const watermarkPadding = this.padding;\n          const watermarkMaxX = canvas.width - watermarkWidth - watermarkPadding;\n          const watermarkMaxY = canvas.height - watermarkHeight - watermarkPadding;\n          const angle = (Math.random() - 0.5) * Math.PI / 4;\n          var x = 0;\n          var y = 0;\n          for (let i = 0; i < 5000; i++) {\n            watermarkContext.save();\n            watermarkContext.translate(x + watermarkWidth / 3, y + watermarkHeight / 3);\n            watermarkContext.rotate(angle);\n            watermarkContext.fillText(this.watermarkText, 0, 0, watermarkMaxX - x);\n            watermarkContext.restore();\n            x += watermarkWidth + watermarkPadding;\n            if (x > watermarkMaxX) {\n              x = 0;\n              y += watermarkHeight + watermarkPadding;\n              if (y > watermarkMaxY) {\n                break;\n              }\n            }\n          }\n          const watermarkImg = new Image();\n          watermarkImg.onload = () => {\n            context.clearRect(0, 0, canvas.width, canvas.height);\n            context.drawImage(img, 0, 0, canvas.width / 3, canvas.height / 3);\n            context.drawImage(watermarkImg, 0, 0);\n          };\n          watermarkImg.src = watermarkCanvas.toDataURL();\n        };\n        img.src = this.imageSrc;\n      },\n      addWatermark() {\n        if (this.imageLoaded) {\n          this.drawWatermark();\n        }\n      },\n      downloadImage() {\n        const canvas = this.$refs.canvas;\n        const dataURL = canvas.toDataURL('image/png');\n        const link = document.createElement('a');\n        link.download = 'watermarked-image.png';\n        link.href = dataURL;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      },\n    },\n  };\n  </script>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}