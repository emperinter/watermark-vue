{"ast":null,"code":"export default {\n  data() {\n    return {\n      watermarkText: 'My Custom Watermark',\n      fontSize: 50,\n      color: '#000000',\n      angle: -45\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = event => {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = this.$refs.canvas;\n          const context = canvas.getContext('2d');\n          canvas.width = img.width;\n          canvas.height = img.height;\n          context.drawImage(img, 0, 0, canvas.width / 2, canvas.height / 2);\n          const watermarkCanvas = document.createElement('canvas');\n          watermarkCanvas.width = canvas.width;\n          watermarkCanvas.height = canvas.height;\n          const watermarkContext = watermarkCanvas.getContext('2d');\n          watermarkContext.font = `${this.fontSize}px Arial`;\n          watermarkContext.fillStyle = this.color;\n          watermarkContext.textAlign = 'center';\n          watermarkContext.textBaseline = 'middle';\n          const angle = (Math.random() - 0.5) * Math.PI / 4;\n          const watermarkWidth = watermarkContext.measureText(this.watermarkText).width;\n          const watermarkHeight = this.fontSize;\n          const watermarkPadding = 10;\n          const watermarkMaxX = canvas.width - watermarkWidth - watermarkPadding;\n          const watermarkMaxY = canvas.height - watermarkHeight - watermarkPadding;\n          for (let i = 0; i < 5; i++) {\n            const x = Math.random() * watermarkMaxX;\n            const y = Math.random() * watermarkMaxY;\n            watermarkContext.save();\n            watermarkContext.translate(x + watermarkWidth / 2, y + watermarkHeight / 2);\n            watermarkContext.rotate(angle);\n            watermarkContext.fillText(this.watermarkText, 0, 0, watermarkMaxX - x);\n            watermarkContext.restore();\n          }\n          const watermarkImg = new Image();\n          watermarkImg.onload = () => {\n            context.drawImage(watermarkImg, 0, 0);\n          };\n          watermarkImg.src = watermarkCanvas.toDataURL();\n        };\n        img.src = event.target.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    downloadImage() {\n      const canvas = this.$refs.canvas;\n      const dataURL = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.download = 'watermarked-image.png';\n      link.href = dataURL;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n};","map":{"version":3,"names":["data","watermarkText","fontSize","color","angle","methods","handleFileUpload","event","file","target","files","reader","FileReader","onload","img","Image","canvas","$refs","context","getContext","width","height","drawImage","watermarkCanvas","document","createElement","watermarkContext","font","fillStyle","textAlign","textBaseline","Math","random","PI","watermarkWidth","measureText","watermarkHeight","watermarkPadding","watermarkMaxX","watermarkMaxY","i","x","y","save","translate","rotate","fillText","restore","watermarkImg","src","toDataURL","result","readAsDataURL","downloadImage","dataURL","link","download","href","body","appendChild","click","removeChild"],"sources":["/Users/emperinter/app/HTML/watermark-vue/src/components/ImageWatermark.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"file\" @change=\"handleFileUpload\">\n    <div>\n      <label for=\"text-input\">Watermark Text:</label>\n      <input type=\"text\" id=\"text-input\" v-model=\"watermarkText\">\n    </div>\n    <div>\n      <label for=\"font-size-input\">Font Size:</label>\n      <input type=\"number\" id=\"font-size-input\" v-model.number=\"fontSize\">\n    </div>\n    <div>\n      <label for=\"color-input\">Color:</label>\n      <input type=\"color\" id=\"color-input\" v-model=\"color\">\n    </div>\n    <div>\n      <label for=\"angle-input\">Angle:</label>\n      <input type=\"number\" id=\"angle-input\" v-model.number=\"angle\">\n    </div>\n    <button @click=\"downloadImage\">Download</button>\n    <canvas ref=\"canvas\"></canvas>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      watermarkText: 'My Custom Watermark',\n      fontSize: 50,\n      color: '#000000',\n      angle: -45,\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n        const img = new Image();\n        img.onload = () => {\n        const canvas = this.$refs.canvas;\n        const context = canvas.getContext('2d');\n        canvas.width = img.width;\n        canvas.height = img.height;\n        context.drawImage(img, 0, 0, canvas.width/2, canvas.height/2);\n        const watermarkCanvas = document.createElement('canvas');\n        watermarkCanvas.width = canvas.width;\n        watermarkCanvas.height = canvas.height;\n        const watermarkContext = watermarkCanvas.getContext('2d');\n        watermarkContext.font = `${this.fontSize}px Arial`;\n        watermarkContext.fillStyle = this.color;\n        watermarkContext.textAlign = 'center';\n        watermarkContext.textBaseline = 'middle';\n        const angle = (Math.random() - 0.5) * Math.PI / 4;\n        const watermarkWidth = watermarkContext.measureText(this.watermarkText).width;\n        const watermarkHeight = this.fontSize;\n        const watermarkPadding = 10;\n        const watermarkMaxX = canvas.width - watermarkWidth - watermarkPadding;\n        const watermarkMaxY = canvas.height - watermarkHeight - watermarkPadding;\n        for (let i = 0; i < 5; i++) {\n            const x = Math.random() * watermarkMaxX;\n            const y = Math.random() * watermarkMaxY;\n            watermarkContext.save();\n            watermarkContext.translate(x + watermarkWidth / 2, y + watermarkHeight / 2);\n            watermarkContext.rotate(angle);\n            watermarkContext.fillText(this.watermarkText, 0, 0, watermarkMaxX - x);\n            watermarkContext.restore();\n        }\n\n        const watermarkImg = new Image();\n        watermarkImg.onload = () => {\n            context.drawImage(watermarkImg, 0, 0);\n        };\n        watermarkImg.src = watermarkCanvas.toDataURL();\n        };\n        img.src = event.target.result;\n    };\n\n    reader.readAsDataURL(file);\n    },\n\n    downloadImage() {\n      const canvas = this.$refs.canvas;\n      const dataURL = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.download = 'watermarked-image.png';\n      link.href = dataURL;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}