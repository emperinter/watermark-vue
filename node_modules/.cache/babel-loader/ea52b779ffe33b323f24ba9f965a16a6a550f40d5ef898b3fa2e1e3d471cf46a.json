{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  align: \"center\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = {\n  for: \"text-input\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = {\n  for: \"font-size-input\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_9 = {\n  for: \"color-input\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_11 = {\n  for: \"angle-input\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_13 = {\n  for: \"opacity-input\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_15 = {\n  for: \"padding-input\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_17 = {\n  ref: \"canvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), _hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addWatermark && $options.addWatermark(...args))\n  }, _toDisplayString(_ctx.$t('Add Watermark')), 1 /* TEXT */), _hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.downloadImage && $options.downloadImage(...args))\n  }, _toDisplayString(_ctx.$t('Download')), 1 /* TEXT */)]), _hoisted_4, _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_5, _toDisplayString(_ctx.$t('Watermark Text')) + \":\", 1 /* TEXT */), _hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"text-input\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.watermarkText = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.watermarkText]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_7, _toDisplayString(_ctx.$t('Font Size')) + \":\", 1 /* TEXT */), _hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"font-size-input\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.fontSize = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.fontSize, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_9, _toDisplayString(_ctx.$t('Font Color')) + \":\", 1 /* TEXT */), _hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"color\",\n    id: \"color-input\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.color = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.color]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_11, _toDisplayString(_ctx.$t('Font Angle')) + \":\", 1 /* TEXT */), _hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"angle-input\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.angle = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.angle, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_13, _toDisplayString(_ctx.$t('Font Opacity')) + \":\", 1 /* TEXT */), _hoisted_14, _withDirectives(_createElementVNode(\"input\", {\n    type: \"range\",\n    id: \"opacity-input\",\n    min: \"0\",\n    max: \"1\",\n    step: \"0.05\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.opacity = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.opacity, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_15, _toDisplayString(_ctx.$t('WaterMark Padding')), 1 /* TEXT */), _hoisted_16, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"padding-input\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.padding = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.padding, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_17, null, 512 /* NEED_PATCH */)])]);\n}","map":{"version":3,"names":["align","_createElementVNode","for","ref","_createElementBlock","_hoisted_1","type","onChange","_cache","args","$options","handleFileUpload","_hoisted_2","onClick","addWatermark","_ctx","$t","_hoisted_3","downloadImage","_hoisted_4","_hoisted_5","_toDisplayString","_hoisted_6","id","$data","watermarkText","$event","_hoisted_7","_hoisted_8","fontSize","_hoisted_9","_hoisted_10","color","_hoisted_11","_hoisted_12","angle","_hoisted_13","_hoisted_14","min","max","step","opacity","_hoisted_15","_hoisted_16","padding","_hoisted_17"],"sources":["/Users/emperinter/app/HTML/watermark-vue/src/components/ImageWatermark.vue"],"sourcesContent":["<template>\n    <div>\n      <div align=\"center\">\n        <input type=\"file\" @change=\"handleFileUpload\">\n        <br>\n        <button @click=\"addWatermark\">{{ $t('Add Watermark')}}</button>\n        <br>\n        <button @click=\"downloadImage\">{{ $t('Download') }}</button>\n      </div>\n      <hr>\n      <div>\n        <label for=\"text-input\">{{ $t('Watermark Text') }}:</label>\n        <br>\n        <input type=\"text\" id=\"text-input\" v-model=\"watermarkText\">\n      </div>\n      <div>\n        <label for=\"font-size-input\">{{ $t('Font Size')}}:</label>\n        <br>\n        <input type=\"number\" id=\"font-size-input\" v-model.number=\"fontSize\">\n      </div>\n      <div>\n        <label for=\"color-input\">{{ $t('Font Color')}}:</label>\n        <br>\n        <input type=\"color\" id=\"color-input\" v-model=\"color\">\n      </div>\n      <div>\n        <label for=\"angle-input\">{{ $t('Font Angle')}}:</label>\n        <br>\n        <input type=\"number\" id=\"angle-input\" v-model.number=\"angle\">\n      </div>\n      <div>\n        <label for=\"opacity-input\">{{ $t('Font Opacity')}}:</label>\n        <br>\n        <input type=\"range\" id=\"opacity-input\" min=\"0\" max=\"1\" step=\"0.05\" v-model.number=\"opacity\">\n      </div>\n      <div>\n        <label for=\"padding-input\">{{ $t('WaterMark Padding')}}</label>\n        <br>\n        <input type=\"number\" id=\"padding-input\" v-model.number=\"padding\">\n    </div>\n    <div>\n        <canvas ref=\"canvas\"></canvas>\n    </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        watermarkText: this.$t('WaterMarkText'),\n        fontSize: 18,\n        color: '#000000',\n        angle: -45,\n        opacity: 0.5,\n        padding: 30,\n        imageLoaded: false,\n        imageSrc: null,\n      };\n    },\n    methods: {\n      handleFileUpload(event) {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n  \n        reader.onload = (event) => {\n          this.imageLoaded = true;\n          this.imageSrc = event.target.result;\n          this.drawWatermark();\n        };\n  \n        reader.readAsDataURL(file);\n      },\n      drawWatermark() {\n        const canvas = this.$refs.canvas;\n        const context = canvas.getContext('2d');\n        const img = new Image();\n        img.onload = () => {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          context.drawImage(img, 0, 0, canvas.width, canvas.height);\n          const watermarkCanvas = document.createElement('canvas');\n          watermarkCanvas.width = canvas.width / 3;\n          watermarkCanvas.height = canvas.height / 3;\n          const watermarkContext = watermarkCanvas.getContext('2d');\n          watermarkContext.font = `${this.fontSize}px Arial`;\n          watermarkContext.fillStyle = `${this.color}${Math.floor(this.opacity * 255).toString(16)}`\n          watermarkContext.textAlign = 'center';\n          watermarkContext.textBaseline = 'middle';\n          const watermarkWidth = watermarkContext.measureText(this.watermarkText).width;\n          const watermarkHeight = this.fontSize;\n          const watermarkPadding = this.padding;\n          const watermarkMaxX = canvas.width - watermarkWidth - watermarkPadding;\n          const watermarkMaxY = canvas.height - watermarkHeight - watermarkPadding;\n          const angle = (Math.random() - 0.5) * Math.PI / 4;\n          var x = 0;\n          var y = 0;\n          for (let i = 0; i < 5000; i++) {\n            watermarkContext.save();\n            watermarkContext.translate(x + watermarkWidth / 3, y + watermarkHeight / 3);\n            watermarkContext.rotate(angle);\n            watermarkContext.fillText(this.watermarkText, 0, 0, watermarkMaxX - x);\n            watermarkContext.restore();\n            x += watermarkWidth + watermarkPadding;\n            if (x > watermarkMaxX) {\n              x = 0;\n              y += watermarkHeight + watermarkPadding;\n              if (y > watermarkMaxY) {\n                break;\n              }\n            }\n          }\n          const watermarkImg = new Image();\n          watermarkImg.onload = () => {\n            context.clearRect(0, 0, canvas.width, canvas.height);\n            context.drawImage(img, 0, 0, canvas.width / 3, canvas.height / 3);\n            context.drawImage(watermarkImg, 0, 0);\n          };\n          watermarkImg.src = watermarkCanvas.toDataURL();\n        };\n        img.src = this.imageSrc;\n      },\n      addWatermark() {\n        if (this.imageLoaded) {\n          this.drawWatermark();\n        }\n      },\n      downloadImage() {\n        const canvas = this.$refs.canvas;\n        const dataURL = canvas.toDataURL('image/png');\n        const link = document.createElement('a');\n        link.download = 'watermarked-image.png';\n        link.href = dataURL;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      },\n    },\n  };\n  </script>\n  "],"mappings":";;EAEWA,KAAK,EAAC;AAAQ;gCAEjBC,mBAAA,CAAI;gCAEJA,mBAAA,CAAI;gCAGNA,mBAAA,CAAI;;EAEKC,GAAG,EAAC;AAAY;gCACvBD,mBAAA,CAAI;;EAIGC,GAAG,EAAC;AAAiB;gCAC5BD,mBAAA,CAAI;;EAIGC,GAAG,EAAC;AAAa;iCACxBD,mBAAA,CAAI;;EAIGC,GAAG,EAAC;AAAa;iCACxBD,mBAAA,CAAI;;EAIGC,GAAG,EAAC;AAAe;iCAC1BD,mBAAA,CAAI;;EAIGC,GAAG,EAAC;AAAe;iCAC1BD,mBAAA,CAAI;;EAIIE,GAAG,EAAC;AAAQ;;uBAxCxBC,mBAAA,CA0CM,cAzCJH,mBAAA,CAMM,OANNI,UAMM,GALJJ,mBAAA,CAA8C;IAAvCK,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;qCAC5CG,UAAI,EACJX,mBAAA,CAA+D;IAAtDY,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAI,YAAA,IAAAJ,QAAA,CAAAI,YAAA,IAAAL,IAAA,CAAY;sBAAKM,IAAA,CAAAC,EAAE,mCACnCC,UAAI,EACJhB,mBAAA,CAA4D;IAAnDY,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAQ,aAAA,IAAAR,QAAA,CAAAQ,aAAA,IAAAT,IAAA,CAAa;sBAAKM,IAAA,CAAAC,EAAE,6B,GAEtCG,UAAI,EACJlB,mBAAA,CAIM,cAHJA,mBAAA,CAA2D,SAA3DmB,UAA2D,EAAAC,gBAAA,CAAhCN,IAAA,CAAAC,EAAE,sBAAqB,GAAC,iBACnDM,UAAI,E,gBACJrB,mBAAA,CAA2D;IAApDK,IAAI,EAAC,MAAM;IAACiB,EAAE,EAAC,YAAY;+DAAUC,KAAA,CAAAC,aAAa,GAAAC,MAAA;iDAAbF,KAAA,CAAAC,aAAa,E,KAE3DxB,mBAAA,CAIM,cAHJA,mBAAA,CAA0D,SAA1D0B,UAA0D,EAAAN,gBAAA,CAA1BN,IAAA,CAAAC,EAAE,iBAAe,GAAC,iBAClDY,UAAI,E,gBACJ3B,mBAAA,CAAoE;IAA7DK,IAAI,EAAC,QAAQ;IAACiB,EAAE,EAAC,iBAAiB;+DAAiBC,KAAA,CAAAK,QAAQ,GAAAH,MAAA;iDAARF,KAAA,CAAAK,QAAQ,E;YAAxB;EAAyB,E,MAErE5B,mBAAA,CAIM,cAHJA,mBAAA,CAAuD,SAAvD6B,UAAuD,EAAAT,gBAAA,CAA3BN,IAAA,CAAAC,EAAE,kBAAgB,GAAC,iBAC/Ce,WAAI,E,gBACJ9B,mBAAA,CAAqD;IAA9CK,IAAI,EAAC,OAAO;IAACiB,EAAE,EAAC,aAAa;+DAAUC,KAAA,CAAAQ,KAAK,GAAAN,MAAA;iDAALF,KAAA,CAAAQ,KAAK,E,KAErD/B,mBAAA,CAIM,cAHJA,mBAAA,CAAuD,SAAvDgC,WAAuD,EAAAZ,gBAAA,CAA3BN,IAAA,CAAAC,EAAE,kBAAgB,GAAC,iBAC/CkB,WAAI,E,gBACJjC,mBAAA,CAA6D;IAAtDK,IAAI,EAAC,QAAQ;IAACiB,EAAE,EAAC,aAAa;+DAAiBC,KAAA,CAAAW,KAAK,GAAAT,MAAA;iDAALF,KAAA,CAAAW,KAAK,E;YAArB;EAAsB,E,MAE9DlC,mBAAA,CAIM,cAHJA,mBAAA,CAA2D,SAA3DmC,WAA2D,EAAAf,gBAAA,CAA7BN,IAAA,CAAAC,EAAE,oBAAkB,GAAC,iBACnDqB,WAAI,E,gBACJpC,mBAAA,CAA4F;IAArFK,IAAI,EAAC,OAAO;IAACiB,EAAE,EAAC,eAAe;IAACe,GAAG,EAAC,GAAG;IAACC,GAAG,EAAC,GAAG;IAACC,IAAI,EAAC,MAAM;+DAAiBhB,KAAA,CAAAiB,OAAO,GAAAf,MAAA;iDAAPF,KAAA,CAAAiB,OAAO,E;YAAvB;EAAwB,E,MAE7FxC,mBAAA,CAII,cAHFA,mBAAA,CAA+D,SAA/DyC,WAA+D,EAAArB,gBAAA,CAAjCN,IAAA,CAAAC,EAAE,uCAChC2B,WAAI,E,gBACJ1C,mBAAA,CAAiE;IAA1DK,IAAI,EAAC,QAAQ;IAACiB,EAAE,EAAC,eAAe;+DAAiBC,KAAA,CAAAoB,OAAO,GAAAlB,MAAA;iDAAPF,KAAA,CAAAoB,OAAO,E;YAAvB;EAAwB,E,MAEpE3C,mBAAA,CAEM,cADFA,mBAAA,CAA8B,UAA9B4C,WAA8B,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}