{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  align: \"center\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = {\n  for: \"text-input\"\n};\nconst _hoisted_5 = {\n  for: \"font-size-input\"\n};\nconst _hoisted_6 = {\n  for: \"color-input\"\n};\nconst _hoisted_7 = {\n  for: \"angle-input\"\n};\nconst _hoisted_8 = {\n  for: \"opacity-input\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = {\n  for: \"padding-input\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_12 = {\n  ref: \"canvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), _hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addWatermark && $options.addWatermark(...args))\n  }, _toDisplayString(_ctx.$t('Add Watermark')) + \":\", 1 /* TEXT */), _hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.downloadImage && $options.downloadImage(...args))\n  }, _toDisplayString(_ctx.$t('Download')) + \":\", 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_4, _toDisplayString(_ctx.$t('Watermark Text')) + \":\", 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"text-input\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.watermarkText = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.watermarkText]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_5, _toDisplayString(_ctx.$t('Font Size')) + \":\", 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"font-size-input\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.fontSize = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.fontSize, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_6, _toDisplayString(_ctx.$t('Font Color')) + \":\", 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"color\",\n    id: \"color-input\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.color = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.color]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_7, _toDisplayString(_ctx.$t('Font Angle')) + \":\", 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"angle-input\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.angle = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.angle, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_8, _toDisplayString(_ctx.$t('Font Opacity')) + \":\", 1 /* TEXT */), _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"range\",\n    id: \"opacity-input\",\n    min: \"0\",\n    max: \"1\",\n    step: \"0.05\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.opacity = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.opacity, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_10, _toDisplayString(_ctx.$t('WaterMark Padding')), 1 /* TEXT */), _hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"padding-input\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.padding = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.padding, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_12, null, 512 /* NEED_PATCH */)])]);\n}","map":{"version":3,"names":["align","_createElementVNode","for","ref","_createElementBlock","_hoisted_1","type","onChange","_cache","args","$options","handleFileUpload","_hoisted_2","onClick","addWatermark","_ctx","$t","_hoisted_3","downloadImage","_hoisted_4","_toDisplayString","id","$data","watermarkText","$event","_hoisted_5","fontSize","_hoisted_6","color","_hoisted_7","angle","_hoisted_8","_hoisted_9","min","max","step","opacity","_hoisted_10","_hoisted_11","padding","_hoisted_12"],"sources":["/Users/emperinter/app/HTML/watermark-vue/src/components/ImageWatermark.vue"],"sourcesContent":["<template>\n    <div>\n      <div align=\"center\">\n        <input type=\"file\" @change=\"handleFileUpload\">\n        <br>\n        <button @click=\"addWatermark\">{{ $t('Add Watermark')}}:</button>\n        <br>\n        <button @click=\"downloadImage\">{{ $t('Download') }}:</button>\n      </div>\n      <div>\n        <label for=\"text-input\">{{ $t('Watermark Text') }}:</label>\n        <input type=\"text\" id=\"text-input\" v-model=\"watermarkText\">\n      </div>\n      <div>\n        <label for=\"font-size-input\">{{ $t('Font Size')}}:</label>\n        <input type=\"number\" id=\"font-size-input\" v-model.number=\"fontSize\">\n      </div>\n      <div>\n        <label for=\"color-input\">{{ $t('Font Color')}}:</label>\n        <input type=\"color\" id=\"color-input\" v-model=\"color\">\n      </div>\n      <div>\n        <label for=\"angle-input\">{{ $t('Font Angle')}}:</label>\n        <input type=\"number\" id=\"angle-input\" v-model.number=\"angle\">\n      </div>\n      <div>\n        <label for=\"opacity-input\">{{ $t('Font Opacity')}}:</label>\n        <br>\n        <input type=\"range\" id=\"opacity-input\" min=\"0\" max=\"1\" step=\"0.05\" v-model.number=\"opacity\">\n      </div>\n      <div>\n        <label for=\"padding-input\">{{ $t('WaterMark Padding')}}</label>\n        <br>\n        <input type=\"number\" id=\"padding-input\" v-model.number=\"padding\">\n    </div>\n    <div>\n        <canvas ref=\"canvas\"></canvas>\n    </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        watermarkText: this.$t('WaterMarkText'),\n        fontSize: 18,\n        color: '#000000',\n        angle: -45,\n        opacity: 0.5,\n        padding: 30,\n        imageLoaded: false,\n        imageSrc: null,\n      };\n    },\n    methods: {\n      handleFileUpload(event) {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n  \n        reader.onload = (event) => {\n          this.imageLoaded = true;\n          this.imageSrc = event.target.result;\n          this.drawWatermark();\n        };\n  \n        reader.readAsDataURL(file);\n      },\n      drawWatermark() {\n        const canvas = this.$refs.canvas;\n        const context = canvas.getContext('2d');\n        const img = new Image();\n        img.onload = () => {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          context.drawImage(img, 0, 0, canvas.width, canvas.height);\n          const watermarkCanvas = document.createElement('canvas');\n          watermarkCanvas.width = canvas.width / 2;\n          watermarkCanvas.height = canvas.height / 2;\n          const watermarkContext = watermarkCanvas.getContext('2d');\n          watermarkContext.font = `${this.fontSize}px Arial`;\n          watermarkContext.fillStyle = `${this.color}${Math.floor(this.opacity * 255).toString(16)}`\n          watermarkContext.textAlign = 'center';\n          watermarkContext.textBaseline = 'middle';\n          const watermarkWidth = watermarkContext.measureText(this.watermarkText).width;\n          const watermarkHeight = this.fontSize;\n          const watermarkPadding = this.padding;\n          const watermarkMaxX = canvas.width - watermarkWidth - watermarkPadding;\n          const watermarkMaxY = canvas.height - watermarkHeight - watermarkPadding;\n          const angle = (Math.random() - 0.5) * Math.PI / 4;\n          var x = 0;\n          var y = 0;\n          for (let i = 0; i < 5000; i++) {\n            watermarkContext.save();\n            watermarkContext.translate(x + watermarkWidth / 2, y + watermarkHeight / 2);\n            watermarkContext.rotate(angle);\n            watermarkContext.fillText(this.watermarkText, 0, 0, watermarkMaxX - x);\n            watermarkContext.restore();\n            x += watermarkWidth + watermarkPadding;\n            if (x > watermarkMaxX) {\n              x = 0;\n              y += watermarkHeight + watermarkPadding;\n              if (y > watermarkMaxY) {\n                break;\n              }\n            }\n          }\n          const watermarkImg = new Image();\n          watermarkImg.onload = () => {\n            context.clearRect(0, 0, canvas.width, canvas.height);\n            context.drawImage(img, 0, 0, canvas.width / 2, canvas.height / 2);\n            context.drawImage(watermarkImg, 0, 0);\n          };\n          watermarkImg.src = watermarkCanvas.toDataURL();\n        };\n        img.src = this.imageSrc;\n      },\n      addWatermark() {\n        if (this.imageLoaded) {\n          this.drawWatermark();\n        }\n      },\n      downloadImage() {\n        const canvas = this.$refs.canvas;\n        const dataURL = canvas.toDataURL('image/png');\n        const link = document.createElement('a');\n        link.download = 'watermarked-image.png';\n        link.href = dataURL;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      },\n    },\n  };\n  </script>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}